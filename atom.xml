<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TimeOrigin</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://timeorigin.cn/"/>
  <updated>2017-12-03T16:35:51.231Z</updated>
  <id>http://timeorigin.cn/</id>
  
  <author>
    <name>Junyangz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF</title>
    <link href="http://timeorigin.cn/ctf/"/>
    <id>http://timeorigin.cn/ctf/</id>
    <published>2017-11-20T08:32:10.000Z</published>
    <updated>2017-12-03T16:35:51.231Z</updated>
    
    <content type="html"><![CDATA[<p></p><p style="text-align: center;"> Junyangz | emhhbmdqdW55YW5nMTdAbWFpbHMudWNhcy5hYy5jbg==</p>
<h1 id="签。。签到题？"><a href="#签。。签到题？" class="headerlink" title="签。。签到题？"></a>签。。签到题？</h1><h2 id="你想要什么？告诉我"><a href="#你想要什么？告诉我" class="headerlink" title="你想要什么？告诉我"></a>你想要什么？告诉我</h2><p><a href="http://124.16.71.62:30004" target="_blank" rel="external">http://124.16.71.62:30004</a></p>
<ol>
<li>input ‘flag’</li>
<li>get ZmxhZ3tXZWxDMG1lX3RvX2N0ZjJ9</li>
<li>base64.decode(ZmxhZ3tXZWxDMG1lX3RvX2N0ZjJ9)</li>
<li>get “flag{WelC0me_to_ctf2}”</li>
</ol>
<h1 id="文。。文件包含？"><a href="#文。。文件包含？" class="headerlink" title="文。。文件包含？"></a>文。。文件包含？</h1><a id="more"></a>
<h2 id="嘻嘻，我是flag，来包我啊"><a href="#嘻嘻，我是flag，来包我啊" class="headerlink" title="嘻嘻，我是flag，来包我啊~~"></a>嘻嘻，我是flag，来包我啊~~</h2><p><a href="http://124.16.71.62:30005/page.php" target="_blank" rel="external">http://124.16.71.62:30005/page.php</a></p>
<ol>
<li><p>Index page<br> This index page<br> <a href="http://124.16.71.62:30005/page.php?file=another" target="_blank" rel="external">another page</a></p>
</li>
<li><p>This is another page<br> This is another page<br> But nothing<br> <a href="http://124.16.71.62:30005/page.php?file=index" target="_blank" rel="external">return index page</a></p>
</li>
<li><p>observe url get file bypass</p>
<ul>
<li>inspect source code </li>
<li><p>find </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">john@ubuntu:/var/www$ tree</div><div class="line">.</div><div class="line">├── flag</div><div class="line">└── html</div><div class="line">    ├──page.php</div><div class="line">    ├──index</div><div class="line">    ├──another</div><div class="line">&lt;!--</div><div class="line"><span class="keyword">if</span> (strpos(<span class="variable">$file_path</span>, <span class="string">"."</span>) === 0 || substr_count(<span class="variable">$file_path</span>, <span class="string">".."</span>) &gt; 2) &#123;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"&lt;p&gt;malicious parameter&lt;/&gt;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>constract file bypass<br><a href="http://124.16.71.62:30005/page.php?file=/html/../flag" target="_blank" rel="external">http://124.16.71.62:30005/page.php?file=/html/../flag</a></p>
</li>
</ul>
</li>
<li><p>get flag</p>
<p> <strong>flag{Bypass_File_Path_Check}</strong></p>
</li>
</ol>
<h1 id="S。。SQL注入？"><a href="#S。。SQL注入？" class="headerlink" title="S。。SQL注入？"></a>S。。SQL注入？</h1><h2 id="听说flag表的value字段里面有好东西。。"><a href="#听说flag表的value字段里面有好东西。。" class="headerlink" title="听说flag表的value字段里面有好东西。。"></a>听说flag表的value字段里面有好东西。。</h2><p><a href="http://124.16.71.62:30006/?id=MQ==" target="_blank" rel="external">http://124.16.71.62:30006/?id=MQ==</a></p>
<ol>
<li><p>base64.decode(MQ== ) = 1</p>
</li>
<li><p>use sqlmap </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\python27\python.exe  .\sqlmap.py -u<span class="string">"http://124.16.71.62:30006/?id=NA=="</span>  --tamper base64encode.py -b --current-user --current-db  --tables  --columns --dump-all</div></pre></td></tr></table></figure>
</li>
<li><p>common method</p>
<ul>
<li>id= 1  union select 1,value from flag</li>
<li>base64.encode(id=1 union select 1,value from flag)<br>  = MSAgdW5pb24gc2VsZWN0IDEsdmFsdWUgZnJvbSBmbGFn</li>
<li><a href="http://124.16.71.62:30006/?id=MSAgdW5pb24gc2VsZWN0IDEsdmFsdWUgZnJvbSBmbGFn" target="_blank" rel="external">http://124.16.71.62:30006/?id=MSAgdW5pb24gc2VsZWN0IDEsdmFsdWUgZnJvbSBmbGFn</a></li>
</ul>
</li>
<li><p>get flag</p>
<p> <strong>flag{Have_Fun_In_SQL_Injection}</strong></p>
</li>
</ol>
<h1 id="Upload-and-get-flag"><a href="#Upload-and-get-flag" class="headerlink" title="Upload and get flag?"></a>Upload and get flag?</h1><h2 id="听说编辑文件的时候突然断电会产生swp文件呢"><a href="#听说编辑文件的时候突然断电会产生swp文件呢" class="headerlink" title="听说编辑文件的时候突然断电会产生swp文件呢~"></a>听说编辑文件的时候突然断电会产生swp文件呢~</h2><p><a href="http://124.16.71.62:30007/" target="_blank" rel="external">http://124.16.71.62:30007/</a></p>
<p><a href="http://124.16.71.62:30007/index.php" target="_blank" rel="external">http://124.16.71.62:30007/index.php</a><br><a href="http://124.16.71.62:30007/.index.php.swp" target="_blank" rel="external">http://124.16.71.62:30007/.index.php.swp</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -o .index.php.swp http://124.16.71.62:30007/.index.php.swp</div><div class="line">vim -r .index.php.swp</div></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ($_FILES)&#123;</div><div class="line">    <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">echo</span> <span class="string">"Error: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] . <span class="string">"&lt;br /&gt;"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] !== <span class="string">"image/jpeg"</span>)&#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"stop hacking!"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] / <span class="number">1024</span> &gt; <span class="number">2048</span>)&#123;</div><div class="line">            <span class="keyword">die</span>(<span class="string">"size too big!"</span>);</div><div class="line">        &#125;</div><div class="line">        $file_tmp = fopen($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], <span class="string">'rb'</span>);</div><div class="line">        $bin = fread($file_tmp, <span class="number">2</span>);</div><div class="line">        fclose($file_tmp);</div><div class="line">        $data = unpack(<span class="string">'C2chars'</span>, $bin);</div><div class="line">        $type_code = intval($data[<span class="string">'chars1'</span>].$data[<span class="string">'chars2'</span>]);</div><div class="line">        $flag = <span class="number">0</span>;</div><div class="line">        <span class="keyword">switch</span> ($type_code) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">255216</span>:</div><div class="line">                $fileType = <span class="string">'jpg'</span>;</div><div class="line">                $flag = <span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">13780</span>:</div><div class="line">                $fileType = <span class="string">'png'</span>;</div><div class="line">                $flag = <span class="number">1</span>;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                $fileType = <span class="string">'unknown'</span>;</div><div class="line">                <span class="keyword">die</span>(<span class="string">"error file head!"</span>);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> ($flag === <span class="number">1</span>)&#123;</div><div class="line">            $filetype = substr($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>], strrpos($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>], <span class="string">'.'</span>));</div><div class="line">            $filename = md5($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]) . $filetype;</div><div class="line">            <span class="keyword">if</span> (strtolower($filetype) === <span class="string">".php"</span>)&#123;</div><div class="line">                copy(<span class="string">'../flag'</span>, $filename);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $filename);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">echo</span> <span class="string">"&lt;h1&gt;成功&lt;/h1&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="All-Summary"><a href="#All-Summary" class="headerlink" title="All Summary"></a>All Summary</h2><ol>
<li><p>upload php file</p>
<ul>
<li>use burp suite modify filename Junyangz.jpg to Junyangz.php</li>
</ul>
</li>
<li><p>get file location</p>
<ul>
<li>analyse index.php by .index.php.swp</li>
<li><p>get the file name :</p>
<blockquote>
<p>$filename = md5($_FILES[“file”][“name”]) . $filetype;</p>
</blockquote>
</li>
<li><p>MD5.hash(Junyangz.php)=f0480f39a6cb1a1ff5f55021ac0824f7</p>
</li>
<li>as f0480f39a6cb1a1ff5f55021ac0824f7.php</li>
</ul>
</li>
<li><p>get flag:</p>
<ul>
<li><p><a href="http://124.16.71.62:30007/f0480f39a6cb1a1ff5f55021ac0824f7.php" target="_blank" rel="external">http://124.16.71.62:30007/f0480f39a6cb1a1ff5f55021ac0824f7.php</a></p>
</li>
<li><p><strong>flag{Upl0ad_w1lL_get_fl4g}</strong></p>
</li>
</ul>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;p style=&quot;text-align: center;&quot;&gt; Junyangz | emhhbmdqdW55YW5nMTdAbWFpbHMudWNhcy5hYy5jbg==&lt;/p&gt;
&lt;h1 id=&quot;签。。签到题？&quot;&gt;&lt;a href=&quot;#签。。签到题？&quot; class=&quot;headerlink&quot; title=&quot;签。。签到题？&quot;&gt;&lt;/a&gt;签。。签到题？&lt;/h1&gt;&lt;h2 id=&quot;你想要什么？告诉我&quot;&gt;&lt;a href=&quot;#你想要什么？告诉我&quot; class=&quot;headerlink&quot; title=&quot;你想要什么？告诉我&quot;&gt;&lt;/a&gt;你想要什么？告诉我&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://124.16.71.62:30004&quot;&gt;http://124.16.71.62:30004&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;input ‘flag’&lt;/li&gt;
&lt;li&gt;get ZmxhZ3tXZWxDMG1lX3RvX2N0ZjJ9&lt;/li&gt;
&lt;li&gt;base64.decode(ZmxhZ3tXZWxDMG1lX3RvX2N0ZjJ9)&lt;/li&gt;
&lt;li&gt;get “flag{WelC0me_to_ctf2}”&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;文。。文件包含？&quot;&gt;&lt;a href=&quot;#文。。文件包含？&quot; class=&quot;headerlink&quot; title=&quot;文。。文件包含？&quot;&gt;&lt;/a&gt;文。。文件包含？&lt;/h1&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://timeorigin.cn/categories/Web-Security/"/>
    
    
      <category term="ctf" scheme="http://timeorigin.cn/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop HA &amp; Hbase etc cluster on Vultr</title>
    <link href="http://timeorigin.cn/hadoop/"/>
    <id>http://timeorigin.cn/hadoop/</id>
    <published>2017-04-08T11:57:42.000Z</published>
    <updated>2017-06-28T11:35:20.460Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h2><h3 id="This-example-is-based-on-the-environment-below"><a href="#This-example-is-based-on-the-environment-below" class="headerlink" title="This example is based on the environment below."></a>This example is based on the environment below.</h3><ul>
<li>Environment </li>
</ul>
<blockquote>
<p>Centos 7 on Vultr Janpan zone.<br>hadoop-2.6.5<br>zookeeper-3.4.10<br>habase-1.2.5</p>
</blockquote>
<ul>
<li>Master <a id="more"></a>
</li>
</ul>
<table>
<thead>
<tr>
<th>Hostname</th>
<th style="text-align:center">Pravite IP</th>
<th style="text-align:center">Public IP</th>
<th style="text-align:right">Public IPv6 IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>Master.node01</td>
<td style="text-align:center">10.99.0.12</td>
<td style="text-align:center">45.76.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
<tr>
<td>Master.node02</td>
<td style="text-align:center">10.99.0.13</td>
<td style="text-align:center">45.32.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
</tbody>
</table>
<ul>
<li>Slave </li>
</ul>
<table>
<thead>
<tr>
<th>Hostname</th>
<th style="text-align:center">Pravite IP</th>
<th style="text-align:center">Public IP</th>
<th style="text-align:right">Public IPv6 IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>Slave.node01</td>
<td style="text-align:center">10.99.0.10</td>
<td style="text-align:center">45.77.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
<tr>
<td>Slave.node02</td>
<td style="text-align:center">10.99.0.11</td>
<td style="text-align:center">45.77.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
<tr>
<td>Slave.node03</td>
<td style="text-align:center">10.99.0.14</td>
<td style="text-align:center">45.77.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
<tr>
<td>Slave.node04</td>
<td style="text-align:center">10.99.0.15</td>
<td style="text-align:center">108.6.X</td>
<td style="text-align:right">2001:19f0:X</td>
</tr>
</tbody>
</table>
<h3 id="install-software-and-configure-pravite-network-on-all-node"><a href="#install-software-and-configure-pravite-network-on-all-node" class="headerlink" title="install software and configure pravite network on all node."></a>install software and configure pravite network on all node.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install vim -y</div><div class="line">yum install net-tools -y   <span class="comment">#for ifconfig command </span></div><div class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth1</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">DEVICE=eth1</div><div class="line">ONBOOT=yes</div><div class="line">NM_CONTROLLED=no</div><div class="line">BOOTPROTO=static</div><div class="line">IPADDR=10.99.0.xx</div><div class="line">NETMASK=255.255.0.0</div><div class="line">IPV6INIT=no</div><div class="line">MTU=1450</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart network</div></pre></td></tr></table></figure>
<h3 id="Install-JDK"><a href="#Install-JDK" class="headerlink" title="Install JDK"></a>Install JDK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl -LO -H <span class="string">"Cookie: oraclelicense=accept-securebackup-cookie"</span> http://download.oracle.com/otn-pub/java/jdk/8u121-b13/e9e7ea248e2c4826b92b3f075a80e441/jdk-8u121-linux-x64.rpm</div><div class="line">rpm -Uvh jdk-8u121-linux-x64.rpm</div><div class="line">vim /etc/profile</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># add follows to the end</span></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/default</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure>
<h2 id="Create-a-user-for-Hadoop-on-all-Nodes"><a href="#Create-a-user-for-Hadoop-on-all-Nodes" class="headerlink" title="Create a user for Hadoop on all Nodes."></a>Create a user for Hadoop on all Nodes.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">useradd <span class="_">-d</span> /usr/hadoop hadoop </div><div class="line">chmod 755 /usr/hadoop </div><div class="line">passwd hadoop</div><div class="line"><span class="comment">#enter admin </span></div><div class="line"><span class="comment">#enter admin again</span></div></pre></td></tr></table></figure>
<h2 id="Login-as-hadoop-user-to-Master-Node-and-create-SSH-key-pair-no-passphrase-and-send-it-to-other-nodes"><a href="#Login-as-hadoop-user-to-Master-Node-and-create-SSH-key-pair-no-passphrase-and-send-it-to-other-nodes" class="headerlink" title="Login as hadoop user to Master Node and create SSH key-pair (no-passphrase) and send it to other nodes."></a>Login as hadoop user to Master Node and create SSH key-pair (no-passphrase) and send it to other nodes.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">su hadoop</div><div class="line">ssh-keygen -t rsa 				<span class="comment">#on all node </span></div><div class="line">scp .ssh/id_rsa.pub hadoop@master.node01:id_rsa_xx.pub	<span class="comment">#send all *.pub to Master.node01(also on Master.node01) the 'xx' should be replace to identify each node.</span></div><div class="line">cat *.pub &gt;&gt; .ssh/authorized_keys</div><div class="line">scp .ssh/authorized_keys hadoop@master.node02:~/.ssh/authorized_keys  <span class="comment">#send to all node.(from master.node01 to other)</span></div><div class="line"></div><div class="line"><span class="comment"># ssh-copy-id localhost             #on master node01.</span></div><div class="line"><span class="comment"># ssh-copy-id Slave.node01</span></div><div class="line"><span class="comment"># ssh-copy-id Slave.node02</span></div></pre></td></tr></table></figure>
<h2 id="Install-Hadoop-on-Master-node01-Nodes-Work-as-hadoop-user"><a href="#Install-Hadoop-on-Master-node01-Nodes-Work-as-hadoop-user" class="headerlink" title="Install Hadoop on Master.node01 Nodes. Work as hadoop user."></a>Install Hadoop on Master.node01 Nodes. Work as hadoop user.</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl -O http://ftp.tsukuba.wide.ad.jp/software/apache/hadoop/common/hadoop-2.6.5/hadoop-2.6.5.tar.gz</div><div class="line">tar zxvf hadoop-2.6.5.tar.gz -C /usr/hadoop --strip-components 1</div><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># add follows to the end</span></div><div class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/hadoop</div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_YARN_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">"-Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib/native"</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/sbin:<span class="variable">$HADOOP_HOME</span>/</div><div class="line"></div><div class="line"><span class="built_in">source</span> ~/.bash_profile </div><div class="line">mkdir data</div><div class="line">vim ~/etc/hadoop/slaves</div><div class="line"><span class="comment"># rm localhost add follows to the end</span></div><div class="line">slave.node01</div><div class="line">slave.node02</div><div class="line">slave.node03</div></pre></td></tr></table></figure>
<h3 id="Configure-Hadoop-on-Master-Node-Work-as-hadoop-user"><a href="#Configure-Hadoop-on-Master-Node-Work-as-hadoop-user" class="headerlink" title="Configure Hadoop on Master Node. Work as hadoop user."></a>Configure Hadoop on Master Node. Work as hadoop user.</h3><h4 id="Configure-core-site-xml"><a href="#Configure-core-site-xml" class="headerlink" title="Configure core-site.xml"></a>Configure core-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">vim ~/etc/hadoop/core-site.xml</div><div class="line"><span class="comment"># add into &lt;configuration&gt; - &lt;/configuration&gt; section</span></div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</div><div class="line">&lt;value&gt;hdfs://masters&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</div><div class="line">&lt;value&gt;/user/hadoop/tmp&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">&lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;</div><div class="line">&lt;value&gt;slave.node01:2181,slave.node02:2181,slave.node03:2181&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure>
<h4 id="Configure-hdfs-site-xml"><a href="#Configure-hdfs-site-xml" class="headerlink" title="Configure hdfs-site.xml"></a>Configure hdfs-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">vim ~/etc/hadoop/hdfs-site.xml</div><div class="line"><span class="comment"># add into &lt;configuration&gt; - &lt;/configuration&gt; section</span></div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.nameservices&lt;/name&gt;</div><div class="line">        &lt;value&gt;masters&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.ha.namenodes.masters&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master1,Master2&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.namenode.rpc-address.masters.Master1&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node01:50090&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.namenode.http-address.masters.Master1&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node01:50070&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.namenode.rpc-address.masters.Master2&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node02:50090&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.namenode.http-address.masters.Master2&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node02:50070&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;</div><div class="line">        &lt;value&gt;qjournal://slave.node01:8485;slave.node02:8485;slave.node03:8485/masters&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.journalnode.edits.dir&lt;/name&gt;</div><div class="line">        &lt;value&gt;/usr/hadoop/journal&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;</div><div class="line">        &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.client.failover.proxy.provider.masters&lt;/name&gt;</div><div class="line">        &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;</div><div class="line">        &lt;value&gt;</div><div class="line">                sshfence</div><div class="line">                shell(/bin/<span class="literal">true</span>)</div><div class="line">        &lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;</div><div class="line">        &lt;value&gt;/usr/hadoop/.ssh/id_rsa&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;dfs.ha.fencing.ssh.connect-timeout&lt;/name&gt;</div><div class="line">        &lt;value&gt;30000&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure>
<h4 id="Configure-mapred-site-xml"><a href="#Configure-mapred-site-xml" class="headerlink" title="Configure mapred-site.xml"></a>Configure mapred-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">vim ~/etc/hadoop/mapred-site.xml</div><div class="line"><span class="comment"># create new</span></div><div class="line">&lt;configuration&gt;</div><div class="line">  &lt;property&gt;</div><div class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</div><div class="line">    &lt;value&gt;yarn&lt;/value&gt;</div><div class="line">  &lt;/property&gt;</div><div class="line">  &lt;property&gt;</div><div class="line">    &lt;name&gt;mapred.job.tracker&lt;/name&gt;</div><div class="line">    &lt;value&gt;localhost:9001&lt;/value&gt;</div><div class="line">  &lt;/property&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h4 id="Configure-yarn-site-xml"><a href="#Configure-yarn-site-xml" class="headerlink" title="Configure yarn-site.xml"></a>Configure yarn-site.xml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">vim ~/etc/hadoop/yarn-site.xml</div><div class="line"><span class="comment"># add into &lt;configuration&gt; - &lt;/configuration&gt; section</span></div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.ha.enabled&lt;/name&gt;</div><div class="line">        &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.cluster-id&lt;/name&gt;</div><div class="line">        &lt;value&gt;RM_HA_ID&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.ha.rm-ids&lt;/name&gt;</div><div class="line">        &lt;value&gt;rm1,rm2&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.hostname.rm1&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node01&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.hostname.rm2&lt;/name&gt;</div><div class="line">        &lt;value&gt;Master.node02&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.recovery.enabled&lt;/name&gt;</div><div class="line">        &lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.store.class&lt;/name&gt;           </div><div class="line">        &lt;value&gt;org.apache.hadoop.yarn.server.resourcemanager.recovery.ZKRMStateStore&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.resourcemanager.zk-address&lt;/name&gt;</div><div class="line">        &lt;value&gt;slave.node01:2181,slave.node02:2181,slave.node03:2181&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div><div class="line">&lt;property&gt;</div><div class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</div><div class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</div><div class="line">&lt;/property&gt;</div></pre></td></tr></table></figure>
<h3 id="Configure-Hadoop-on-Slave-Node-Work-as-hadoop-user"><a href="#Configure-Hadoop-on-Slave-Node-Work-as-hadoop-user" class="headerlink" title="Configure Hadoop on Slave Node. Work as hadoop user."></a>Configure Hadoop on Slave Node. Work as hadoop user.</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">tar zcvf hadoop-run.tar.gz *  <span class="comment">#on Master.node01</span></div><div class="line">scp hadoop-run.tar.gz Master.node02: <span class="comment">#send to other node and extract.</span></div><div class="line">scp hadoop-run.tar.gz Slave.node01:</div><div class="line">scp hadoop-run.tar.gz Slave.node02:</div><div class="line">scp hadoop-run.tar.gz Slave.node03:</div><div class="line">scp hadoop-run.tar.gz Slave.node04:</div><div class="line"></div><div class="line">tar zxvf hadoop-run.tar.gz </div><div class="line">vim ~/.bash_profile   <span class="comment">#on all slave node</span></div><div class="line"><span class="comment"># add follows to the end</span></div><div class="line"><span class="built_in">export</span> HADOOP_HOME=/usr/hadoop</div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_YARN_HOME=<span class="variable">$HADOOP_HOME</span></div><div class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">"-Djava.library.path=<span class="variable">$HADOOP_HOME</span>/lib/native"</span></div><div class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$HADOOP_HOME</span>/lib/native</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HADOOP_HOME</span>/sbin:<span class="variable">$HADOOP_HOME</span>/</div><div class="line"></div><div class="line"><span class="built_in">source</span> ~/.bash_profile </div><div class="line"></div><div class="line"><span class="comment">#On slave.node01-03</span></div><div class="line">hadoop-daemon.sh start journalnode</div><div class="line"><span class="comment">#on Master.node01</span></div><div class="line">hdfs namenode -format</div><div class="line">hadoop-daemon.sh start namenode</div><div class="line"><span class="comment">#hadoop-daemon.sh stop namenode</span></div><div class="line"></div><div class="line"><span class="comment">#on Master.node02</span></div><div class="line">hdfs namenode -bootstrapStandby</div><div class="line">hadoop-daemon.sh start namenode</div><div class="line"><span class="comment">#hadoop-daemon.sh stop namenode</span></div><div class="line"></div><div class="line"><span class="comment">#on Master.node01</span></div><div class="line">hdfs zkfc -formatZK</div><div class="line">start-dfs.sh</div><div class="line">start-yarn.sh</div></pre></td></tr></table></figure>
<h4 id="intall-nginx-and-set-Reverse-Proxy-On-Master-node01-and-Master-node02"><a href="#intall-nginx-and-set-Reverse-Proxy-On-Master-node01-and-Master-node02" class="headerlink" title="intall nginx and set Reverse Proxy On Master.node01 and Master.node02"></a>intall nginx and set Reverse Proxy On Master.node01 and Master.node02</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">exit</span> <span class="comment">#change user to root</span></div><div class="line">yum install epel-release</div><div class="line">yum install nginx</div><div class="line">vim /etc/nginx/nginx.conf</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen       Public-IPv4:50070;</div><div class="line">    listen       [::]:50070;</div><div class="line">    server_name  _;</div><div class="line">    root         /usr/share/nginx/html;</div><div class="line"></div><div class="line">    <span class="comment"># Load configuration files for the default server block.</span></div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://master.node02:50070;</div><div class="line">        proxy_http_version 1.1;</div><div class="line">        proxy_set_header Upgrade <span class="variable">$http_upgrade</span> ;</div><div class="line">        proxy_set_header Connection <span class="string">'upgrade'</span> ;</div><div class="line">        <span class="comment"># proxy_set_header Host $host ;</span></div><div class="line">        proxy_cache_bypass <span class="variable">$http_upgrade</span> ;</div><div class="line">        proxy_set_header x-proxy-user <span class="variable">$remote_user</span> ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 404 /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">server &#123;</div><div class="line">    listen      Public-IPv4:8088;</div><div class="line">    listen       [::]:8088;</div><div class="line">    server_name  _;</div><div class="line">    <span class="comment"># root         /usr/share/nginx/html;</span></div><div class="line"></div><div class="line">    <span class="comment"># Load configuration files for the default server block.</span></div><div class="line">    <span class="comment"># include /etc/nginx/default.d/*.conf;</span></div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        proxy_pass http://master.node02:8088;</div><div class="line">        proxy_http_version 1.1;</div><div class="line">        proxy_set_header Upgrade <span class="variable">$http_upgrade</span> ;</div><div class="line">        proxy_set_header Connection <span class="string">'upgrade'</span> ;</div><div class="line">        <span class="comment"># proxy_set_header Host $host ;</span></div><div class="line">        proxy_cache_bypass <span class="variable">$http_upgrade</span> ;</div><div class="line">        proxy_set_header x-proxy-user <span class="variable">$remote_user</span> ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">systemctl start nginx</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Prerequisite&quot;&gt;&lt;a href=&quot;#Prerequisite&quot; class=&quot;headerlink&quot; title=&quot;Prerequisite&quot;&gt;&lt;/a&gt;Prerequisite&lt;/h2&gt;&lt;h3 id=&quot;This-example-is-based-on-the-environment-below&quot;&gt;&lt;a href=&quot;#This-example-is-based-on-the-environment-below&quot; class=&quot;headerlink&quot; title=&quot;This example is based on the environment below.&quot;&gt;&lt;/a&gt;This example is based on the environment below.&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Environment &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Centos 7 on Vultr Janpan zone.&lt;br&gt;hadoop-2.6.5&lt;br&gt;zookeeper-3.4.10&lt;br&gt;habase-1.2.5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Master
    
    </summary>
    
      <category term="ops" scheme="http://timeorigin.cn/categories/ops/"/>
    
    
      <category term="Hadoop" scheme="http://timeorigin.cn/tags/Hadoop/"/>
    
      <category term="HA" scheme="http://timeorigin.cn/tags/HA/"/>
    
  </entry>
  
  <entry>
    <title>Migrating to IPv6 on AWS</title>
    <link href="http://timeorigin.cn/IPv6-AWS/"/>
    <id>http://timeorigin.cn/IPv6-AWS/</id>
    <published>2017-04-04T03:13:08.000Z</published>
    <updated>2017-04-08T11:36:27.400Z</updated>
    
    <content type="html"><![CDATA[<p>&nbsp;&nbsp;If you have an existing VPC that supports IPv4 only, and resources in your subnet that are configured to use IPv4 only, you can enable IPv6 support for your VPC and resources. Your VPC can operate in dual-stack mode — your resources can communicate over IPv4, or IPv6, or both. IPv4 and IPv6 communication are independent of each other.<br>&nbsp;&nbsp;You cannot disable IPv4 support for your VPC and subnets; this is the default IP addressing system for Amazon VPC and Amazon EC2.The following steps to enable your VPC and subnets to use IPv6.<br>&nbsp;&nbsp;Before you migrate to using IPv6, ensure that you have read the features of IPv6 addressing for Amazon VPC: <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-ip-addressing.html#vpc-ipv4-ipv6-comparison" target="_blank" rel="external">IPv4 and IPv6 Characteristics and Restrictions</a>.<br><a id="more"></a></p>
<h2 id="Step-1-Associate-an-IPv6-CIDR-Block-with-Your-VPC-and-Subnets"><a href="#Step-1-Associate-an-IPv6-CIDR-Block-with-Your-VPC-and-Subnets" class="headerlink" title="Step 1: Associate an IPv6 CIDR Block with Your VPC and Subnets"></a>Step 1: Associate an IPv6 CIDR Block with Your VPC and Subnets</h2><p>You can associate an IPv6 CIDR block with your VPC, and then associate a /64 CIDR block from that range with each subnet.</p>
<h3 id="To-associate-an-IPv6-CIDR-block-with-a-VPC"><a href="#To-associate-an-IPv6-CIDR-block-with-a-VPC" class="headerlink" title="To associate an IPv6 CIDR block with a VPC"></a><strong>To associate an IPv6 CIDR block with a VPC</strong></h3><ol>
<li>Open the Amazon VPC console at <a href="https://console.aws.amazon.com/vpc/" target="_blank" rel="external">https://console.aws.amazon.com/vpc/</a>.</li>
<li>In the navigation pane, choose <strong><em>Your VPCs</em></strong>.</li>
<li>Select your VPC, choose <strong><em>Actions, Edit CIDRs</em></strong>.</li>
<li>Choose <strong><em>Add IPv6 CIDR</em></strong>. After the IPv6 CIDR block has been added, choose <strong><em>Close</em></strong>.</li>
</ol>
<h3 id="To-associate-an-IPv6-CIDR-block-with-a-subnet"><a href="#To-associate-an-IPv6-CIDR-block-with-a-subnet" class="headerlink" title="To associate an IPv6 CIDR block with a subnet"></a><strong>To associate an IPv6 CIDR block with a subnet</strong></h3><ol>
<li>Open the Amazon VPC console at <a href="https://console.aws.amazon.com/vpc/" target="_blank" rel="external">https://console.aws.amazon.com/vpc/</a>.</li>
<li>In the navigation pane, choose <strong><em>Subnets</em></strong>.</li>
<li>Select your subnet, choose <strong><em>Subnet Actions, Edit IPv6 CIDRs</em></strong>.</li>
<li>Choose <strong><em>Add IPv6 CIDR</em></strong>. Specify the hexadecimal pair for the subnet (for example, 00) and confirm the entry by choosing the tick icon.</li>
<li>Choose <strong><em>Close</em></strong>. Repeat the steps for the other subnets in your VPC.</li>
</ol>
<h2 id="Step-2-Create-and-Configure-an-Egress-Only-Internet-Gateway"><a href="#Step-2-Create-and-Configure-an-Egress-Only-Internet-Gateway" class="headerlink" title="Step 2: Create and Configure an Egress-Only Internet Gateway"></a>Step 2: Create and Configure an Egress-Only Internet Gateway</h2><p>Create an egress-only Internet gateway for your VPC.</p>
<h3 id="To-create-an-egress-only-Internet-Gateway"><a href="#To-create-an-egress-only-Internet-Gateway" class="headerlink" title="To create an egress-only Internet Gateway"></a><strong>To create an egress-only Internet Gateway</strong></h3><ol>
<li>Open the Amazon VPC console at <a href="https://console.aws.amazon.com/vpc/" target="_blank" rel="external">https://console.aws.amazon.com/vpc/</a>.</li>
<li>In the navigation pane, choose <strong><em>Egress Only Internet Gateways, Create Egress Only Internet Gateway.</em></strong></li>
<li>Select the VPC in which to create the egress-only Internet gateway. Choose <strong><em>Create</em></strong>.</li>
</ol>
<h2 id="Step-3-Update-Your-Route-Tables"><a href="#Step-3-Update-Your-Route-Tables" class="headerlink" title="Step 3: Update Your Route Tables"></a>Step 3: Update Your Route Tables</h2><p>&nbsp;&nbsp;For the example above, update the custom route table for the private subnet so that your database instance can use the egress-only Internet gateway for IPv6 traffic. You must also update the custom route table for the public subnet so that your web server can use the Internet gateway for IPv6 traffic.</p>
<h3 id="To-update-your-route-tables"><a href="#To-update-your-route-tables" class="headerlink" title="To update your route tables"></a><strong>To update your route tables</strong></h3><ol>
<li>Open the Amazon VPC console at <a href="https://console.aws.amazon.com/vpc/" target="_blank" rel="external">https://console.aws.amazon.com/vpc/</a>.</li>
<li>In the navigation pane, choose <strong><em>Route Tables</em></strong> and select the route table that’s associated with the private subnet.</li>
<li>On the <strong><em>Routes</em></strong> tab, choose <strong><em>Edit</em></strong>, specify ::/0 for <strong><em>Destination</em></strong>, select the egress-only Internet gateway ID for <strong><em>Target</em></strong>, and then choose <strong><em>Save</em></strong>.</li>
<li>Select the route table that’s associated with the public subnet.</li>
<li>On the <strong><em>Routes</em></strong> tab, choose <strong><em>Edit</em></strong>, specify ::/0 for <strong><em>Destination</em></strong>, select the Internet gateway ID for <strong><em>Target</em></strong>, and then choose <strong><em>Save</em></strong>.</li>
</ol>
<h2 id="Step-4-Update-Your-Security-Group-Rules"><a href="#Step-4-Update-Your-Security-Group-Rules" class="headerlink" title="Step 4: Update Your Security Group Rules"></a>Step 4: Update Your Security Group Rules</h2><p>&nbsp;&nbsp;For the example above, your web server security group (sg-11aa22bb) allows inbound access from IPv4 addresses over specific ports. You must add rules that allow the same inbound access from IPv6 addresses, namely HTTP and HTTPS access from all IPv6 addresses, and SSH access from a specific IPv6 address (if applicable). You do not need to make any changes to the inbound rules for your database security group; the rule that allows all communication from sg-11aa22bb includes IPv6 communication by default.</p>
<h3 id="To-update-your-security-group-rules"><a href="#To-update-your-security-group-rules" class="headerlink" title="To update your security group rules"></a><strong>To update your security group rules</strong></h3><ol>
<li>Open the Amazon VPC console at <a href="https://console.aws.amazon.com/vpc/" target="_blank" rel="external">https://console.aws.amazon.com/vpc/</a>.</li>
<li>In the navigation pane, choose <strong><em>Security Groups</em></strong> and select your web server security group.</li>
<li>In the <strong><em>Inbound Rules</em></strong> tab, choose <strong><em>Edit</em></strong>.</li>
<li>For each rule, choose <strong><em>Add another rule</em></strong>, and choose <strong><em>Save</em></strong> when you’re done:<ul>
<li>For <strong><em>Type</em></strong>, select <strong><em>HTTP</em></strong>. For <strong><em>Source</em></strong>, enter ::/0.</li>
<li>For <strong><em>Type</em></strong>, select <strong><em>HTTPS</em></strong>. For <strong><em>Source</em></strong>, enter ::/0.</li>
<li>For <strong><em>Type</em></strong>, select <strong><em>SSH</em></strong>. For <strong><em>Source</em></strong>, enter the IPv6 address of your local computer or the range of addresses for your local network.</li>
</ul>
</li>
</ol>
<p>&nbsp;&nbsp;In this scenario, an outbound rule that allows all IPv6 traffic is automatically added your security groups when you associate an IPv6 CIDR block with your VPC. However, if you modified the original outbound rules for your security group, this rule is not automatically added, and you must add equivalent outbound rules for IPv6 traffic. For more information, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html" target="_blank" rel="external">Security Groups for Your VPC</a>.</p>
<h3 id="Update-Your-Network-ACL-Rules"><a href="#Update-Your-Network-ACL-Rules" class="headerlink" title="Update Your Network ACL Rules"></a><strong>Update Your Network ACL Rules</strong></h3><p>&nbsp;&nbsp;If you associate an IPv6 CIDR block with your VPC, we automatically add rules to the default network ACL to allow IPv6 traffic, provided you haven’t modified its default rules. If you’ve modified your default network ACL or if you’ve created a custom network ACL with rules to control the flow of traffic to and from your subnet, you must manually add rules for IPv6 traffic. For more information about recommended network ACL rules for a VPC with a private and public subnet, see <a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Appendix_NACLs.html#VPC_Appendix_NACLs_Scenario_2" target="_blank" rel="external">Recommended Rules for Scenario 2</a>.</p>
<h2 id="Step-5-Change-Your-Instance-Type"><a href="#Step-5-Change-Your-Instance-Type" class="headerlink" title="Step 5: Change Your Instance Type"></a>Step 5: Change Your Instance Type</h2><ul>
<li>see <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html" target="_blank" rel="external">Instance Types</a> which supports IPv6.</li>
</ul>
<h2 id="Step-6-Assign-IPv6-Addresses-to-Your-Instances"><a href="#Step-6-Assign-IPv6-Addresses-to-Your-Instances" class="headerlink" title="Step 6: Assign IPv6 Addresses to Your Instances"></a>Step 6: Assign IPv6 Addresses to Your Instances</h2><p>&nbsp;&nbsp;After you’ve verified that your instance type supports IPv6, you can assign an IPv6 address to your instance using the Amazon EC2 console. The IPv6 address is assigned to the primary network interface (eth0) for the instance.</p>
<h3 id="To-assign-an-IPv6-address-to-your-instance"><a href="#To-assign-an-IPv6-address-to-your-instance" class="headerlink" title="To assign an IPv6 address to your instance"></a><strong>To assign an IPv6 address to your instance</strong></h3><ol>
<li>Open the Amazon EC2 console at <a href="https://console.aws.amazon.com/ec2/" target="_blank" rel="external">https://console.aws.amazon.com/ec2/</a>.</li>
<li>In the navigation pane, choose <strong><em>Instances</em></strong>.</li>
<li>Select your instance, and choose <strong><em>Actions, Networking, Manage IP Addresses</em></strong>.</li>
<li>Under <strong><em>IPv6 Addresses</em></strong>, choose <strong><em>Assign new IP</em></strong>. You can enter a specific IPv6 address from the range of your subnet, or you can leave the default Auto-Assign value to let Amazon choose one for you.</li>
<li>Choose <strong><em>Yes, Update</em></strong>.</li>
</ol>
<p>&nbsp;&nbsp;Alternatively, if you launch a replacement instance (for example, if you were unable to resize your instance and you created a new AMI instead), you can assign an IPv6 address during launch.</p>
<h3 id="To-assign-an-IPv6-address-to-an-instance-during-launch"><a href="#To-assign-an-IPv6-address-to-an-instance-during-launch" class="headerlink" title="To assign an IPv6 address to an instance during launch"></a><strong>To assign an IPv6 address to an instance during launch</strong></h3><ol>
<li>Open the Amazon EC2 console at <a href="https://console.aws.amazon.com/ec2/" target="_blank" rel="external">https://console.aws.amazon.com/ec2/</a>.</li>
<li>Select your AMI and an IPv6-compatible instance type, and choose <strong><em>Next: Configure Instance Details</em></strong>.</li>
<li>On the <strong><em>Configure Instance Details</em></strong> page, select a VPC for <strong><em>Network</em></strong> and a subnet for <strong><em>Subnet</em></strong>. For <strong><em>Auto-assign IPv6 IP</em></strong>, select <strong><em>Enable</em></strong>.</li>
<li>Follow the remaining steps in the wizard to launch your instance.</li>
</ol>
<h2 id="Step-7-Configure-IPv6-on-Your-Instances"><a href="#Step-7-Configure-IPv6-on-Your-Instances" class="headerlink" title="Step 7: Configure IPv6 on Your Instances"></a>Step 7: Configure IPv6 on Your Instances</h2><h3 id="RHEL-CentOS"><a href="#RHEL-CentOS" class="headerlink" title="RHEL/CentOS"></a>RHEL/CentOS</h3><p><strong>To configure DHCPv6 on RHEL 7 or CentOS 7</strong></p>
<ol>
<li>Connect to your instance using the instance’s public IPv4 address.</li>
<li><p>Using a text editor of your choice, open /etc/sysconfig/network-scripts/ifcfg-eth0 and locate the following line:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">IPV6INIT=<span class="string">"no"</span></div><div class="line">Replace that line with the following:</div></pre></td></tr></table></figure>
<p>Replace that line with the following:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">IPV6INIT=<span class="string">"yes"</span></div></pre></td></tr></table></figure>
<p>Add the following two lines, and save your changes:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">DHCPV6C=yes</div><div class="line">NM_CONTROLLED=no</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li><p>Open /etc/sysconfig/network, add or amend the following line as follows, and save your changes:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">NETWORKING_IPV6=yes</div></pre></td></tr></table></figure>
</li>
<li><p>Restart networking on your instance by running the following command:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service network restart</div></pre></td></tr></table></figure>
<p>You can use the ifconfig command to verify that the IPv6 address is recognized on the primary network interface.</p>
</li>
</ol>
<p><strong>To configure DHCPv6 on RHEL 6 or CentOS 6</strong></p>
<ol>
<li>Connect to your instance using the instance’s public IPv4 address.</li>
<li>Follow steps 2 - 4 in the procedure above for configuring RHEL 7/CentOS 7.</li>
<li><p>If you restart networking and you get an error that an IPv6 address cannot be obtained, open <strong><em>/etc/sysconfig/network-scripts/ifup-eth</em></strong> and locate the following line (by default, it’s line 327):</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> /sbin/dhclient <span class="string">"<span class="variable">$DHCLIENTARGS</span>"</span>; <span class="keyword">then</span></div></pre></td></tr></table></figure>
<p>Remove the quotes that surround $DHCLIENTARGS and save your changes. Restart networking on your instance:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service network restart</div></pre></td></tr></table></figure>
<p>The picture shows the routing information from CERNET2 to AWS Seoul.<br><img src="https://ooo.0o0.ooo/2017/04/08/58e8c9c12a57e.png" alt="tarcert"></p>
</li>
</ol>
<h3 id="Other-Platform"><a href="#Other-Platform" class="headerlink" title="Other Platform"></a>Other Platform</h3><ol>
<li><a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-migrate-ipv6.html#ipv6-dhcpv6-amazon-linux" target="_blank" rel="external">Amazon Linux</a></li>
<li><a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-migrate-ipv6.html#ipv6-dhcpv6-ubuntu" target="_blank" rel="external">Ubuntu</a></li>
<li><a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-migrate-ipv6.html#ipv6-dhcpv6-windows" target="_blank" rel="external">Windows</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;If you have an existing VPC that supports IPv4 only, and resources in your subnet that are configured to use IPv4 only, you can enable IPv6 support for your VPC and resources. Your VPC can operate in dual-stack mode — your resources can communicate over IPv4, or IPv6, or both. IPv4 and IPv6 communication are independent of each other.&lt;br&gt;&amp;nbsp;&amp;nbsp;You cannot disable IPv4 support for your VPC and subnets; this is the default IP addressing system for Amazon VPC and Amazon EC2.The following steps to enable your VPC and subnets to use IPv6.&lt;br&gt;&amp;nbsp;&amp;nbsp;Before you migrate to using IPv6, ensure that you have read the features of IPv6 addressing for Amazon VPC: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-ip-addressing.html#vpc-ipv4-ipv6-comparison&quot;&gt;IPv4 and IPv6 Characteristics and Restrictions&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="Reprinted" scheme="http://timeorigin.cn/categories/Reprinted/"/>
    
    
      <category term="AWS" scheme="http://timeorigin.cn/tags/AWS/"/>
    
      <category term="ec2" scheme="http://timeorigin.cn/tags/ec2/"/>
    
      <category term="IPv6" scheme="http://timeorigin.cn/tags/IPv6/"/>
    
      <category term="Centos 7" scheme="http://timeorigin.cn/tags/Centos-7/"/>
    
  </entry>
  
  <entry>
    <title>ELK&amp;SENSU_AWS_GUIDE</title>
    <link href="http://timeorigin.cn/ELK&amp;SENSU_AWS_GUIDE/"/>
    <id>http://timeorigin.cn/ELK&amp;SENSU_AWS_GUIDE/</id>
    <published>2017-03-07T08:30:30.000Z</published>
    <updated>2017-03-16T16:14:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SENSU"><a href="#SENSU" class="headerlink" title="SENSU"></a>SENSU</h2><h3 id="Sensu-Server-and-API-installation"><a href="#Sensu-Server-and-API-installation" class="headerlink" title="Sensu Server and API installation"></a>Sensu Server and API installation</h3><h4 id="Install-Redis-and-Configure-Redis"><a href="#Install-Redis-and-Configure-Redis" class="headerlink" title="Install Redis and Configure Redis"></a>Install Redis and Configure Redis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get -y install redis-server</div><div class="line">sudo update-rc.d redis-server defaults</div><div class="line">sudo vim /etc/redis/redis.conf</div></pre></td></tr></table></figure>
<blockquote>
<p>Change “bind 127.0.0.1” to “bind 0.0.0.0”</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service redis-server restart</div><div class="line">redis-cli ping</div></pre></td></tr></table></figure>
<a id="more"></a>
<blockquote>
<p>return pong  and redis is ok.</p>
</blockquote>
<h4 id="Install-sensu-server"><a href="#Install-sensu-server" class="headerlink" title="Install sensu server"></a>Install sensu server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget -q https://sensu.global.ssl.fastly.net/apt/pubkey.gpg -O- |- sudo apt-key add -</div><div class="line"><span class="built_in">echo</span>​ ​<span class="string">"deb https://sensu.global.ssl.fastly.net/apt sensu main"</span>​ | sudo tee /etc/apt/sources.list.d/sensu.list</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get install sensu</div></pre></td></tr></table></figure>
<h4 id="Config-sensu-server"><a href="#Config-sensu-server" class="headerlink" title="Config sensu server"></a>Config sensu server</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/api.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"api"</span>:&#123;  </div><div class="line">      <span class="attr">"host"</span>:<span class="string">"0.0.0.0"</span>,</div><div class="line">      <span class="attr">"port"</span>:<span class="number">4567</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/client.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"client"</span>:&#123;  </div><div class="line">      <span class="attr">"name"</span>:<span class="string">"sensu-server"</span>,</div><div class="line">      <span class="attr">"address"</span>:<span class="string">" local-ip "</span>,</div><div class="line">      <span class="attr">"environment"</span>:<span class="string">"sensu"</span>,</div><div class="line">      <span class="attr">"subscriptions"</span>:[  </div><div class="line">         <span class="string">" linux "</span>,</div><div class="line">         <span class="string">" dev "</span></div><div class="line">      ],</div><div class="line">      <span class="attr">"socket"</span>:&#123;  </div><div class="line">         <span class="attr">"bind"</span>:<span class="string">"127.0.0.1"</span>,</div><div class="line">         <span class="attr">"port"</span>:<span class="number">3030</span></div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/redis.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"redis"</span>:&#123;  </div><div class="line">      <span class="attr">"host"</span>:<span class="string">" local-ip(redis install in localhost) "</span>,</div><div class="line">      <span class="attr">"port"</span>:<span class="number">6379</span>,</div><div class="line">      <span class="attr">"reconnect_on_error"</span>:<span class="literal">true</span>,</div><div class="line">      <span class="attr">"auto_reconnect"</span>:<span class="literal">true</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/transport.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"transport"</span>:&#123;  </div><div class="line">      <span class="attr">"name"</span>:<span class="string">"redis"</span>,</div><div class="line">      <span class="attr">"reconnect_on_error"</span>:<span class="literal">true</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Enable-the-Sensu-services-to-start-on-boot-and-Start-Sensu"><a href="#Enable-the-Sensu-services-to-start-on-boot-and-Start-Sensu" class="headerlink" title="Enable the Sensu services to start on boot and Start Sensu"></a>Enable the Sensu services to start on boot and Start Sensu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d sensu-server defaults</div><div class="line">sudo update-rc.d sensu-api defaults</div><div class="line">sudo update-rc.d sensu-client defaults</div><div class="line">sudo service sensu-server start &amp;&amp; sudo service sensu-api start &amp;&amp;- sudo service sensu-client start</div></pre></td></tr></table></figure>
<h3 id="Installation-on-the-Client"><a href="#Installation-on-the-Client" class="headerlink" title="Installation on the Client"></a>Installation on the Client</h3><h4 id="Install-sensu-client"><a href="#Install-sensu-client" class="headerlink" title="Install sensu client"></a>Install sensu client</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget -q https://sensu.global.ssl.fastly.net/apt/pubkey.gpg -O- |- sudo apt-key add -</div><div class="line"><span class="built_in">echo</span>​ ​<span class="string">"deb https://sensu.global.ssl.fastly.net/apt sensu main"</span>​ | sudo- tee /etc/apt/sources.list.d/sensu.list</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get install sensu uchiwa</div></pre></td></tr></table></figure>
<h4 id="Configure-sensu-client-and-uchiwa"><a href="#Configure-sensu-client-and-uchiwa" class="headerlink" title="Configure sensu client and uchiwa"></a>Configure sensu client and uchiwa</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/client.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"client"</span>:&#123;  </div><div class="line">      <span class="attr">"name"</span>:<span class="string">" hostname "</span>,</div><div class="line">      <span class="attr">"address"</span>:<span class="string">" local-ip "</span>,</div><div class="line">      <span class="attr">"environment"</span>:<span class="string">"sensu"</span>,</div><div class="line">      <span class="attr">"subscriptions"</span>:[  </div><div class="line">         <span class="string">"linux"</span>,</div><div class="line">         <span class="string">"dev"</span></div><div class="line">      ]</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/redis.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"redis"</span>:&#123;  </div><div class="line">      <span class="attr">"host"</span>:<span class="string">" redis-server-ip "</span>,</div><div class="line">      <span class="attr">"port"</span>:<span class="number">6379</span>,</div><div class="line">      <span class="attr">"reconnect_on_error"</span>:<span class="literal">true</span>,</div><div class="line">      <span class="attr">"auto_reconnect"</span>:<span class="literal">true</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/transport.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"transport"</span>:&#123;  </div><div class="line">      <span class="attr">"name"</span>:<span class="string">"redis"</span>,</div><div class="line">      <span class="attr">"reconnect_on_error"</span>:<span class="literal">true</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d sensu-client defaults</div><div class="line">sudo update-rc.d uchiwa defaults</div><div class="line">sudo vim /etc/sensu/uchiwa.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"sensu"</span>:[  </div><div class="line">      &#123;  </div><div class="line">         <span class="attr">"name"</span>:<span class="string">"sensu"</span>,</div><div class="line">         <span class="attr">"host"</span>:<span class="string">" sensu-server-ip or hostname "</span>,</div><div class="line">         <span class="attr">"port"</span>:<span class="number">4567</span>,</div><div class="line">         <span class="attr">"timeout"</span>:<span class="number">10</span></div><div class="line">      &#125;</div><div class="line">   ],</div><div class="line">   <span class="attr">"uchiwa"</span>:&#123;  </div><div class="line">      <span class="attr">"host"</span>:<span class="string">"0.0.0.0"</span>,</div><div class="line">      <span class="attr">"port"</span>:<span class="number">3000</span>,</div><div class="line">      <span class="attr">"refresh"</span>:<span class="number">10</span></div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service sensu-client start</div><div class="line">sudo service uchiwa start</div></pre></td></tr></table></figure>
<h3 id="Set-Up-a-Check"><a href="#Set-Up-a-Check" class="headerlink" title="Set Up a Check"></a>Set Up a Check</h3><h4 id="Add-a-check-on-both-server"><a href="#Add-a-check-on-both-server" class="headerlink" title="Add a check on both server"></a>Add a check on both server</h4><blockquote>
<p>Install sensu-plugins-XXX on all sensu client for check.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sensu-install -p sensu-plugins-network-checks</div></pre></td></tr></table></figure>
<p>……</p>
<blockquote>
<p>Add check_xxx.json file on only the Sensu master server.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/check.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"checks"</span>:&#123;  </div><div class="line">      <span class="attr">"check_ssh"</span>:&#123;  </div><div class="line">         <span class="attr">"type"</span>:<span class="string">"metric"</span>,</div><div class="line">         <span class="attr">"command"</span>:<span class="string">"check-ports.rb -h 127.0.0.1 -p 22 -t 30"</span>,</div><div class="line">         <span class="attr">"interval"</span>:<span class="number">60</span>,</div><div class="line">         <span class="attr">"subscribers"</span>:[  </div><div class="line">            <span class="string">"dev"</span></div><div class="line">         ],</div><div class="line">         <span class="attr">"handlers"</span>:[  </div><div class="line">            <span class="string">"logstash"</span></div><div class="line">         ]</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"check_dns"</span>:&#123;  </div><div class="line">         <span class="attr">"type"</span>:<span class="string">"metric"</span>,</div><div class="line">         <span class="attr">"command"</span>:<span class="string">"check-ports.rb -h 127.0.0.1 -p 53 -t 30"</span>,</div><div class="line">         <span class="attr">"interval"</span>:<span class="number">60</span>,</div><div class="line">         <span class="attr">"subscribers"</span>:[  </div><div class="line">            <span class="string">"dev"</span></div><div class="line">         ],</div><div class="line">         <span class="attr">"handlers"</span>:[  </div><div class="line">            <span class="string">"logstash"</span></div><div class="line">         ]</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"check_http"</span>:&#123;  </div><div class="line">         <span class="attr">"type"</span>:<span class="string">"metric"</span>,</div><div class="line">         <span class="attr">"command"</span>:<span class="string">"check-ports.rb -h 127.0.0.1 -p 80 -t 30"</span>,</div><div class="line">         <span class="attr">"interval"</span>:<span class="number">60</span>,</div><div class="line">         <span class="attr">"subscribers"</span>:[  </div><div class="line">            <span class="string">"dev"</span></div><div class="line">         ],</div><div class="line">         <span class="attr">"handlers"</span>:[  </div><div class="line">            <span class="string">"logstash"</span></div><div class="line">         ]</div><div class="line">      &#125;,</div><div class="line">      <span class="attr">"check_https"</span>:&#123;  </div><div class="line">         <span class="attr">"type"</span>:<span class="string">"metric"</span>,</div><div class="line">         <span class="attr">"command"</span>:<span class="string">"check-ports.rb -h 127.0.0.1 -p 443 -t 30"</span>,</div><div class="line">         <span class="attr">"interval"</span>:<span class="number">60</span>,</div><div class="line">         <span class="attr">"subscribers"</span>:[  </div><div class="line">            <span class="string">"dev"</span></div><div class="line">         ],</div><div class="line">         <span class="attr">"handlers"</span>:[  </div><div class="line">            <span class="string">"logstash"</span></div><div class="line">         ]</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service sensu-client restart</div></pre></td></tr></table></figure>
<h3 id="Set-Up-a-Handler"><a href="#Set-Up-a-Handler" class="headerlink" title="Set Up a Handler"></a>Set Up a Handler</h3><blockquote>
<p> Add a handler</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y build-essential</div><div class="line">sudo sensu-install -p sensu-plugins-logstash</div></pre></td></tr></table></figure>
<blockquote>
<p>On the Sensu master server, create and edit thehandler_logstash.json file.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/handlers.json</div></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   <span class="attr">"handlers"</span>:&#123;  </div><div class="line">      <span class="attr">"logstash"</span>:&#123;  </div><div class="line">         <span class="attr">"type"</span>:<span class="string">"pipe"</span>,</div><div class="line">         <span class="attr">"command"</span>:<span class="string">"handler-logstash.rb"</span></div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/sensu/conf.d/handler_logstash.json</div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;  </div><div class="line">   "logstash"   ​:&#123;  </div><div class="line">      "server"      ​:​"127.0.0.1"​,</div><div class="line">      "port"      ​:6379,</div><div class="line">      "list"      ​:​"logstash"​,</div><div class="line">      "type"      ​:​"sensu"​,</div><div class="line">      "output"      ​:​"redis"​,</div><div class="line">      "custom"      ​:&#123;  </div><div class="line">         "​thisFieldWillBeMergedIntoTheTopLevelOfOutgoingJSON​"         ​:&#123;  </div><div class="line">            "metadata"            ​:​"some metadata"​,</div><div class="line">            "moreMetadata"            ​:42</div><div class="line">         &#125;</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service sensu-server restart &amp;&amp; sudo service sensu-api restart</div></pre></td></tr></table></figure>
<h2 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h2><h3 id="Install-Java-8"><a href="#Install-Java-8" class="headerlink" title="Install Java 8"></a>Install Java 8</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo add-apt-repository -y ppa:webupd8team/java</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get -y install oracle-java8-installer</div></pre></td></tr></table></figure>
<h3 id="Install-logstash"><a href="#Install-logstash" class="headerlink" title="Install logstash"></a>Install logstash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo- apt-key add -</div><div class="line"><span class="built_in">echo</span>​ ​<span class="string">"deb https://artifacts.elastic.co/packages/5.x/apt stable main"</span>- | sudo tee <span class="_">-a</span> /etc/apt/sources.list.d/elastic-5.x.list</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get install logstash</div><div class="line">sudo initctl start logstash</div></pre></td></tr></table></figure>
<h3 id="Configure-logstash"><a href="#Configure-logstash" class="headerlink" title="Configure logstash"></a>Configure logstash</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/logstash/conf.d/sensu-input-logstash.conf</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">input&#123;</div><div class="line">    redis&#123;  </div><div class="line">        data_type =&gt; &quot;list&quot; </div><div class="line">        key =&gt; &quot;logstash&quot; </div><div class="line">        host =&gt; &quot;127.0.0.1&quot; </div><div class="line">        port =&gt; 6379 </div><div class="line">        threads =&gt; 5</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/logstash/conf.d/elasticsearch-output.conf</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">        hosts =&gt; [ &quot;localhost:9200&quot; ]</div><div class="line">        manage_template =&gt; false</div><div class="line">        index =&gt; &quot;logstash-%&#123;type&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</div><div class="line">        document_type =&gt; &quot;%&#123;type&#125;&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo initctl start logstash</div></pre></td></tr></table></figure>
<h2 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h2><h3 id="Install-elasticsearch"><a href="#Install-elasticsearch" class="headerlink" title="Install elasticsearch"></a>Install elasticsearch</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install elasticsearch</div><div class="line">sudo update-rc.d elasticsearch defaults 95 10</div><div class="line">sudo /usr/share/elasticsearch/bin/elasticsearch-plugin install analysis-smartcn</div><div class="line">sudo -i service elasticsearch start</div></pre></td></tr></table></figure>
<blockquote>
<p>Change user to root and add “network.host: 0.0.0.0” to<br>/etc/elasticsearch/elasticsearch.yml<br>#This file only access by root can not use sudo to modify.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo su</div><div class="line">Vim /etc/elasticsearch/elasticsearch.yml</div><div class="line">network.host: 0.0.0.0</div><div class="line">sudo -i service elasticsearch restart</div></pre></td></tr></table></figure>
<h2 id="Kibana-–-install-in-another-instance"><a href="#Kibana-–-install-in-another-instance" class="headerlink" title="Kibana – install in another instance"></a>Kibana – install in another instance</h2><h3 id="Install-kibana"><a href="#Install-kibana" class="headerlink" title="Install kibana"></a>Install kibana</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo- apt-key add -</div><div class="line"><span class="built_in">echo</span> <span class="string">"deb https://artifacts.elastic.co/packages/5.x/apt stable main"</span> | sudo tee <span class="_">-a</span> /etc/apt/sources.list.d/elastic-5.x.list</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get install kibana</div></pre></td></tr></table></figure>
<h3 id="Install-plugin-own-home"><a href="#Install-plugin-own-home" class="headerlink" title="Install plugin own_home"></a>Install plugin own_home</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /usr/share/kibana/bin/kibana-plugin install https://github.com/wtakase/kibana-own-home/releases/download/v5.2.2/own_home-5.2.2.zip</div></pre></td></tr></table></figure>
<h4 id="Configure-and-run"><a href="#Configure-and-run" class="headerlink" title="Configure and run"></a>Configure and run</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/kibana/kibana.yml</div></pre></td></tr></table></figure>
<p><span style="color: #ff0000;">Notice change the follow ‘es-ip’ to ip address which elasticsearch bind.  </span><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">server.host: <span class="string">"0.0.0.0"</span></div><div class="line">elasticsearch.url: ​<span class="string">"http://localhost:19200"</span></div><div class="line">elasticsearch.requestHeadersWhitelist: [x-proxy-user, cookie ]</div><div class="line">own_home.elasticsearch.url: <span class="string">"http://es-ip:9200"</span></div><div class="line">own_home.session.secretkey: f9e794323b453885f5181f1b624d0a</div><div class="line">own_home.session.isSecure: ​<span class="literal">false</span></div><div class="line">own_home.local.groups: [share01, share02]</div></pre></td></tr></table></figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service kibana start</div></pre></td></tr></table></figure>
<h4 id="Setup-front-end-web-server-we-use-nginx-and-configure-Authentication-only-for-test"><a href="#Setup-front-end-web-server-we-use-nginx-and-configure-Authentication-only-for-test" class="headerlink" title="Setup front end web server (we use nginx) and configure Authentication (only for test)"></a>Setup front end web server (we use nginx) and configure Authentication (only for test)</h4><h5 id="Install-nginx"><a href="#Install-nginx" class="headerlink" title="Install nginx"></a>Install nginx</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get -y install nginx</div></pre></td></tr></table></figure>
<h5 id="Create-user-admin"><a href="#Create-user-admin" class="headerlink" title="Create user admin"></a>Create user admin</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo sh -c ​<span class="string">"echo -n 'admin:' &gt;&gt; /etc/nginx/.htpasswd"</span></div><div class="line">sudo sh -c ​<span class="string">"openssl passwd -apr1 &gt;&gt; /etc/nginx/.htpasswd"</span></div></pre></td></tr></table></figure>
<h5 id="Create-user-user01"><a href="#Create-user-user01" class="headerlink" title="Create user user01"></a>Create user user01</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo sh -c ​<span class="string">"echo -n 'user01:' &gt;&gt; /etc/nginx/.htpasswd"</span></div><div class="line">sudo sh -c ​<span class="string">"openssl passwd -apr1 &gt;&gt; /etc/nginx/.htpasswd"</span></div></pre></td></tr></table></figure>
<h5 id="Configure-Nginx"><a href="#Configure-Nginx" class="headerlink" title="Configure Nginx"></a>Configure Nginx</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/nginx/sites-available/kibana</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">	listen <span class="number">80</span> default_server;</div><div class="line">	listen [::]:<span class="number">80</span> default_server ipv6only=on;</div><div class="line">	server_name localhost(yourdomain.com);</div><div class="line">		location / &#123;</div><div class="line">			auth_basic <span class="string">"Restricted Content"</span> ;</div><div class="line">			auth_basic_user_file /etc/nginx/.htpasswd;</div><div class="line">			proxy_pass http:<span class="comment">//localhost:5601;</span></div><div class="line">			proxy_http_version <span class="number">1.1</span>;</div><div class="line">			proxy_set_header Upgrade $http_upgrade ;</div><div class="line">			proxy_set_header Connection <span class="string">'upgrade'</span> ;</div><div class="line">			proxy_set_header Host $host ;</div><div class="line">			proxy_cache_bypass $http_upgrade ;</div><div class="line">			proxy_set_header x-proxy-user $remote_user ;</div><div class="line">		&#125;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo rm /etc/nginx/sites-enabled/default  &amp;&amp; sudo ln <span class="_">-s</span> /etc/nginx/sites-available/kibana /etc/nginx/sites-enabled/kibana</div></pre></td></tr></table></figure>
<h5 id="Restart-nginx"><a href="#Restart-nginx" class="headerlink" title="Restart nginx"></a>Restart nginx</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service nginx restart</div></pre></td></tr></table></figure>
<h5 id="More-flexible-configuration"><a href="#More-flexible-configuration" class="headerlink" title="More flexible configuration"></a>More flexible configuration</h5><p><a href="https://github.com/wtakase/kibana-own-home" target="_blank" rel="external">https://github.com/wtakase/kibana-own-home</a></p>
<h2 id="Grafana-–install-in-the-Instance-where-Kibana-was-installed"><a href="#Grafana-–install-in-the-Instance-where-Kibana-was-installed" class="headerlink" title="Grafana –install in the Instance where Kibana was installed."></a>Grafana –install in the Instance where Kibana was installed.</h2><h3 id="Install-grafana"><a href="#Install-grafana" class="headerlink" title="Install grafana"></a>Install grafana</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl https://packagecloud.io/gpg.key | sudo apt-key add -</div><div class="line">sudo ​<span class="built_in">echo</span>​ ​<span class="string">"deb https://packagecloud.io/grafana/stable/debian/ jessie- main"</span>​ |sudo tee <span class="_">-a</span> /etc/apt/sources.list.d/grafana.list</div><div class="line">sudo apt-get update &amp;&amp; sudo apt-get -y install grafana</div></pre></td></tr></table></figure>
<blockquote>
<p>As 3000 port has been used by uchiwa so we change the port default 3000 to ​3300​.  Add  “http_port = ​3300”.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/grafana/grafana.ini</div><div class="line">http_port = ​3300</div><div class="line">sudo service grafana-server start</div></pre></td></tr></table></figure>
<blockquote>
<p>Open your browser at <a href="http://:3300" target="_blank" rel="external">http://:3300</a> and use admin/admin as the credentials to access Grafana:</p>
</blockquote>
<h3 id="Configure-grafana"><a href="#Configure-grafana" class="headerlink" title="Configure grafana"></a>Configure grafana</h3><p><a href="http://docs.grafana.org/features/datasources/elasticsearch/" target="_blank" rel="external">http://docs.grafana.org/features/datasources/elasticsearch/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SENSU&quot;&gt;&lt;a href=&quot;#SENSU&quot; class=&quot;headerlink&quot; title=&quot;SENSU&quot;&gt;&lt;/a&gt;SENSU&lt;/h2&gt;&lt;h3 id=&quot;Sensu-Server-and-API-installation&quot;&gt;&lt;a href=&quot;#Sensu-Server-and-API-installation&quot; class=&quot;headerlink&quot; title=&quot;Sensu Server and API installation&quot;&gt;&lt;/a&gt;Sensu Server and API installation&lt;/h3&gt;&lt;h4 id=&quot;Install-Redis-and-Configure-Redis&quot;&gt;&lt;a href=&quot;#Install-Redis-and-Configure-Redis&quot; class=&quot;headerlink&quot; title=&quot;Install Redis and Configure Redis&quot;&gt;&lt;/a&gt;Install Redis and Configure Redis&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-get -y install redis-server&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo update-rc.d redis-server defaults&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo vim /etc/redis/redis.conf&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Change “bind 127.0.0.1” to “bind 0.0.0.0”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo service redis-server restart&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;redis-cli ping&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ops" scheme="http://timeorigin.cn/categories/ops/"/>
    
    
      <category term="SENSU" scheme="http://timeorigin.cn/tags/SENSU/"/>
    
      <category term="ELK Stack" scheme="http://timeorigin.cn/tags/ELK-Stack/"/>
    
      <category term="Elasticsearch" scheme="http://timeorigin.cn/tags/Elasticsearch/"/>
    
      <category term="Kibana" scheme="http://timeorigin.cn/tags/Kibana/"/>
    
      <category term="Logstash" scheme="http://timeorigin.cn/tags/Logstash/"/>
    
      <category term="Grafana" scheme="http://timeorigin.cn/tags/Grafana/"/>
    
      <category term="AWS" scheme="http://timeorigin.cn/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Encrypt，免费好用的 HTTPS 证书</title>
    <link href="http://timeorigin.cn/letsencrypt-certificate/"/>
    <id>http://timeorigin.cn/letsencrypt-certificate/</id>
    <published>2016-10-16T03:30:30.000Z</published>
    <updated>2017-12-25T14:28:39.866Z</updated>
    
    <content type="html"><![CDATA[<p>很早之前我就在关注 <a href="https://letsencrypt.org" target="_blank" rel="external">Let’s Encrypt</a> 这个免费、自动化、开放的证书签发服务。它由 ISRG（Internet Security Research Group，互联网安全研究小组）提供服务，而 ISRG 是来自于美国加利福尼亚州的一个公益组织。Let’s Encrypt 得到了 Mozilla、Cisco、Akamai、Electronic Frontier Foundation 和 Chrome 等众多公司和机构的支持，发展十分迅猛。</p>
<p>申请 Let’s Encrypt 证书不但免费，还非常简单，虽然每次只有 90 天的有效期，但可以通过脚本定期更新，配好之后一劳永逸。经过一段时间的观望，我也正式启用 Let’s Encrypt 证书了，本文记录本站申请过程和遇到的问题。<a id="more"></a></p>
<p>我没有使用 Let’s Encrypt 官网提供的工具来申请证书，而是用了 <a href="https://github.com/diafygi/acme-tiny" target="_blank" rel="external">acme-tiny</a> 这个更为小巧的开源工具。以下内容基本按照 acme-tiny 的说明文档写的，省略了一些我不需要的步骤。</p>
<p>ACME 全称是 Automated Certificate Management Environment，直译过来是自动化证书管理环境的意思，Let’s Encrypt 的证书签发过程使用的就是 ACME 协议。有关 ACME 协议的更多资料可以在<a href="https://github.com/ietf-wg-acme/acme/" target="_blank" rel="external">这个仓库</a>找到。</p>
<h3 id="创建帐号"><a href="#创建帐号" class="headerlink" title="创建帐号"></a>创建帐号</h3><p>首先创建一个目录，例如 <code>ssl</code>，用来存放各种临时文件和最后的证书文件。进入这个目录，创建一个 RSA 私钥用于 Let’s Encrypt 识别你的身份：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl genrsa 4096 &gt; account.key</div></pre></td></tr></table></figure>
<h3 id="创建-CSR-文件"><a href="#创建-CSR-文件" class="headerlink" title="创建 CSR 文件"></a>创建 CSR 文件</h3><p>接着就可以生成 CSR（Certificate Signing Request，证书签名请求）文件了。在这之前，还需要创建域名私钥（一定不要使用上面的账户私钥），根据证书不同类型，域名私钥也可以选择 RSA 和 ECC 两种不同类型。以下两种方式请根据实际情况二选一。</p>
<p>1）创建 RSA 私钥（兼容性好）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl genrsa 4096 &gt; domain.key</div></pre></td></tr></table></figure>
<p>2）创建 ECC 私钥（部分老旧操作系统、浏览器不支持。优点是证书体积小）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#secp256r1</span></div><div class="line">openssl ecparam -genkey -name secp256r1 | openssl ec -out domain.key</div><div class="line"></div><div class="line"><span class="comment">#secp384r1</span></div><div class="line">openssl ecparam -genkey -name secp384r1 | openssl ec -out domain.key</div></pre></td></tr></table></figure>
<p>有关 ECC 证书的更多介绍，请<a href="https://imququ.com/post/optimize-tls-handshake.html#toc-2-1" target="_blank" rel="external">点击这里</a>。</p>
<p>有了私钥文件，就可以生成 CSR 文件了。在 CSR 中推荐至少把域名带 <code>www</code> 和不带 <code>www</code> 的两种情况都加进去，其它子域可以根据需要添加（目前一张证书最多可以包含 100 个域名）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -new -sha256 -key domain.key -subj <span class="string">"/"</span> -reqexts SAN -config &lt;(cat /etc/ssl/openssl.cnf &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=DNS:yoursite.com,DNS:www.yoursite.com"</span>)) &gt; domain.csr</div></pre></td></tr></table></figure>
<p>执行这一步时，如果提示找不到 <code>/etc/ssl/openssl.cnf</code> 文件，请看看 <code>/usr/local/openssl/ssl/openssl.cnf</code> 是否存在。如果还是不行，也可以使用交互方式创建 CSR（需要注意 Common Name 必须为你的域名）：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -new -sha256 -key domain.key -out domain.csr</div></pre></td></tr></table></figure>
<h3 id="配置验证服务"><a href="#配置验证服务" class="headerlink" title="配置验证服务"></a>配置验证服务</h3><p>我们知道，CA 在签发 DV（Domain Validation）证书时，需要验证域名所有权。传统 CA 的验证方式一般是往 <code>admin@yoursite.com</code> 发验证邮件，而 Let’s Encrypt 是在你的服务器上生成一个随机验证文件，再通过创建 CSR 时指定的域名访问，如果可以访问则表明你对这个域名有控制权。</p>
<p>首先创建用于存放验证文件的目录，例如：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir ~/www/challenges/</div></pre></td></tr></table></figure>
<p>然后配置一个 HTTP 服务，以 Nginx 为例：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="section">server</span> &#123;</div><div class="line">    <span class="attribute">server_name</span> www.yoursite.com yoursite.com;</div><div class="line"></div><div class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /.well-known/acme-challenge/ &#123;</div><div class="line">        <span class="attribute">alias</span> /home/xxx/www/challenges/;</div><div class="line">        <span class="attribute">try_files</span> <span class="variable">$uri</span> =<span class="number">404</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="attribute">location</span> / &#123;</div><div class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> https://yoursite.com/<span class="variable">$1</span> <span class="literal">permanent</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上配置优先查找 <code>~/www/challenges/</code> 目录下的文件，如果找不到就重定向到 HTTPS 地址。这个验证服务以后更新证书还要用到，建议一直保留。</p>
<h3 id="获取网站证书"><a href="#获取网站证书" class="headerlink" title="获取网站证书"></a>获取网站证书</h3><p>先把 acme-tiny 脚本保存到之前的 <code>ssl</code> 目录：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://raw.githubusercontent.com/diafygi/acme-tiny/master/acme_tiny.py</div></pre></td></tr></table></figure>
<p>指定账户私钥、CSR 以及验证目录，执行脚本：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python acme_tiny.py --account-key ./account.key --csr ./domain.csr --acme-dir ~/www/challenges/ &gt; ./signed.crt</div></pre></td></tr></table></figure>
<p>如果一切正常，当前目录下就会生成一个 <code>signed.crt</code>，这就是申请好的证书文件。</p>
<p>如果你把域名 DNS 解析放在国内，这一步很可能会遇到类似这样的错误：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ValueError: Wrote file to /home/xxx/www/challenges/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg, but couldn&apos;t download http://www.yoursite.com/.well-known/acme-challenge/oJbvpIhkwkBGBAQUklWJXyC8VbWAdQqlgpwUJkgC1Vg</div></pre></td></tr></table></figure>
<p>这是因为你的域名很可能在国外无法解析，可以找台国外 VPS 验证下。我的域名最近从 DNSPod 换到了阿里云解析，最后又换到了 CloudXNS，就是因为最近前两家在国外都很不稳定。如果你也遇到了类似情况，可以暂时使用国外的 DNS 解析服务商，例如 <a href="https://dns.he.net/" target="_blank" rel="external">dns.he.net</a>。如果还是搞不定，也可以试试「<a href="https://github.com/Neilpang/le" target="_blank" rel="external">Neilpang/le</a>」这个工具的 DNS Mode。</p>
<p>搞定网站证书后，还要下载 Let’s Encrypt 的中间证书。我在之前的文章中讲过，配置 HTTPS 证书时既不要漏掉中间证书，也不要包含根证书。在 Nginx 配置中，需要把中间证书和网站证书合在一起：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</div><div class="line">cat signed.crt intermediate.pem &gt; chained.pem</div></pre></td></tr></table></figure>
<p>为了后续能顺利启用 <a href="https://imququ.com/post/why-can-not-turn-on-ocsp-stapling.html#toc-2" target="_blank" rel="external">OCSP Stapling</a>，我们再把根证书和中间证书合在一起：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget -O - https://letsencrypt.org/certs/isrgrootx1.pem &gt; root.pem</div><div class="line">cat intermediate.pem root.pem &gt; full_chained.pem</div></pre></td></tr></table></figure>
<p>最终，修改 Nginx 中有关证书的配置并 reload 服务即可：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">ssl_certificate</span>     ~/www/ssl/chained.pem;</div><div class="line"><span class="attribute">ssl_certificate_key</span> ~/www/ssl/domain.key;</div></pre></td></tr></table></figure>
<p>Nginx 中与 HTTPS 有关的配置项很多，这里不一一列举了。如有需要，<a href="https://imququ.com/post/my-nginx-conf.html" target="_blank" rel="external">请参考本站配置</a>。</p>
<h3 id="配置自动更新"><a href="#配置自动更新" class="headerlink" title="配置自动更新"></a>配置自动更新</h3><p>Let’s Encrypt 签发的证书只有 90 天有效期，推荐使用脚本定期更新。例如我就创建了一个 <code>renew_cert.sh</code> 并通过 <code>chmod a+x renew_cert.sh</code> 赋予执行权限。文件内容如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="built_in">cd</span> /home/xxx/www/ssl/</div><div class="line">python acme_tiny.py --account-key account.key --csr domain.csr --acme-dir /home/xxx/www/challenges/ &gt; signed.crt || <span class="built_in">exit</span></div><div class="line">wget -O - https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem &gt; intermediate.pem</div><div class="line">cat signed.crt intermediate.pem &gt; chained.pem</div><div class="line">service nginx reload</div></pre></td></tr></table></figure>
<p>crontab 中使用绝对路径比较保险，<code>crontab -e</code> 加入以下内容：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">0 0 1 * * /home/xxx/shell/renew_cert.sh &gt;/dev/null 2&gt;&amp;1</div></pre></td></tr></table></figure>
<p>这样以后证书每个月都会自动更新，一劳永逸。实际上，Let’s Encrypt 官方将证书有效期定为 90 天一方面是为了更安全，更重要的是鼓励用户采用自动化部署方案。</p>
<h3 id="几个问题"><a href="#几个问题" class="headerlink" title="几个问题"></a>几个问题</h3><p>Let’s Encrypt 官方的新特性预告可以在<a href="https://letsencrypt.org/upcoming-features/" target="_blank" rel="external">这个页面查看</a>。</p>
<p>更新：对于个人用户来说，目前 Let’s Encrypt 无疑是最好的选择。</p>
<p>本文先写到这里，如果你在申请 Let’s Encrypt 证书的过程中遇到问题，可以给我留言，也欢迎交流各种心得！</p>
<p>原文链接：<a href="https://imququ.com/post/letsencrypt-certificate.html" target="_blank" rel="external">https://imququ.com/post/letsencrypt-certificate.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很早之前我就在关注 &lt;a href=&quot;https://letsencrypt.org&quot;&gt;Let’s Encrypt&lt;/a&gt; 这个免费、自动化、开放的证书签发服务。它由 ISRG（Internet Security Research Group，互联网安全研究小组）提供服务，而 ISRG 是来自于美国加利福尼亚州的一个公益组织。Let’s Encrypt 得到了 Mozilla、Cisco、Akamai、Electronic Frontier Foundation 和 Chrome 等众多公司和机构的支持，发展十分迅猛。&lt;/p&gt;
&lt;p&gt;申请 Let’s Encrypt 证书不但免费，还非常简单，虽然每次只有 90 天的有效期，但可以通过脚本定期更新，配好之后一劳永逸。经过一段时间的观望，我也正式启用 Let’s Encrypt 证书了，本文记录本站申请过程和遇到的问题。
    
    </summary>
    
      <category term="Reprinted" scheme="http://timeorigin.cn/categories/Reprinted/"/>
    
    
      <category term="Let&#39;s Encrypt" scheme="http://timeorigin.cn/tags/Let-s-Encrypt/"/>
    
      <category term="HTTPS" scheme="http://timeorigin.cn/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>人工智能对人类真正的威胁是什么？--李开复</title>
    <link href="http://timeorigin.cn/ai/"/>
    <id>http://timeorigin.cn/ai/</id>
    <published>2016-03-10T05:58:10.000Z</published>
    <updated>2017-03-16T16:17:32.821Z</updated>
    
    <content type="html"><![CDATA[<div align="left">昨天AlphaGo第一盘棋战胜了李世石，激起了各种“机器超越人类，科幻小说将成真”的讨论。特别有趣的是有人揣测AlphaGo下面会不会故意输下几盘棋，以免人类起疑心，阻挡了它统治人类的野心。其实，虽然机器在逻辑分析推算方面，能力会远超人类，但是依然是属于人类操控的工具。AlphaGo这类的“人工智能”机器真正可能带来的危机，不是奴役人类，而是让人类丧失斗志，无所事事。</div><br><a id="more"></a><br>&nbsp;<br><div align="left">有些人描述AlphaGo是“和人一样的方式思考，但是比人快无数倍”。这么说并不精确。AlphaGo确实比人快无数倍，但是AlphaGo的思考只能说是“被人的大脑启发”，而非和人类思考一样。AlphaGo是一个能自我学习的深度学习，经过专家的调节，它能在任何在可以纯凭逻辑分析推算的问题上，把人类远远低抛在后面。机器速度会越来越快，学习能力会越来越强，数据会越来越多。</div><br>&nbsp;<br><div align="left">基于深度学习的人工智能将带来什么改变呢？我们将看到无数的商机和产品，能够解决问题、拯救生命、产生巨大的商业和用户价值。未来，自动交易能得到更高的投资回报和风险比例，自动诊断+基因排序会达到个性化精准医疗，推荐引擎将能推荐你最可能会买的产品、想吃的菜，想认识的人。在拥有大数据+大计算+专家调节的领域，就不必再跟人类相比了，因为人类根本差的太远了（就像没有人能打败搜索引擎一样）。</div><br>&nbsp;<br><div align="left">这些技术可能辅助专家，也可能取代专家。非专家的工作者很多将会面临失业。未来十年，大部分今天的人类工作可被机器取代。机器将取代许多的护士、记者、会计、教师、股理财师。。。的工作。任何带有“助理”、“代理”或“经纪”等字样的职位都很可能被取代。 这些机器不需要工资，只需要供电和网，就会一年365天，一天24小时“上班”。这些机器将帮助我们创造世界上的大部分财富。</div><br>&nbsp;<br><div align="left">虽然这些机器确实很“聪明”，而且又高效、勤奋、低廉，但是他们并不“人性化”，只是冷冰冰的机器和工具。比如说，AlphaGo第一场就战胜了李世石，但是它不会感觉高兴，也不会理解我们对于它的讨论。甚至，它说不上这局棋是怎么赢的。因为，它的思考虽然周密，但是它不懂“赢了有什么感受？”，也不懂“为什么围棋好玩”，更不懂“人为什么要下棋？”，甚至连“你今天怎么赢的？”都说不上。今天的机器完全无法理解人的情感、喜怒哀乐、七情六欲、信任尊重、价值观等方面 。对于人文艺术、美和爱、幽默感，机器更是丝毫不懂。有位AI研究员做了一套研究幽默感的系统，然后输入了一篇文章，这个系统看了每句话，都说“哈哈”！今天的机器连个两岁小孩都不如。对人工智能的研究者，这应该是一大未来的挑战。</div><br>&nbsp;<br><div align="left"><img src="http://ww2.sinaimg.cn/large/475b3d56jw1f1rkukhf2kj20gg09wq4m.jpg" alt=""><br>图一：未来机器统治人类的预测还很遥远</div><br>&nbsp;<br><div align="left">所以，今天这些机器仅仅是我们的工具，会为创造价值。至少今天，我们不必担心人工智奴役我们（不过要盯好拥有机器学习+大数据的公司，别来作恶伤害用户）。那我们该担心什么呢？这些强大的机器，将带来人类能否度过有史以来最大的“下岗潮”。这次的“机器取代人类”将远超过去的工业革命和信息革命。不过，“下岗”还不是最可怕的，因为这些机器会产生巨大的商业价值，养活着这些下岗者，进而养活着人类。人类最应该担心的是：一旦当机器供养着人类，人类达到了马斯洛需求的基本需求，人类真的还会有动力去追求更宏伟的目标，自我实现吗？还是会醉生梦死、无所事事地或者？</div><br>&nbsp;<br><div align="left"><img src="http://ww4.sinaimg.cn/crop.0.0.580.325.1000.562/475b3d56jw1f1rks1gk11j20g40c4tb2.jpg" alt=""><br>图二：未来机器养活无所事事的人：真实的危机</div><br>&nbsp;<br><div align="left">面对这个担心，我们应该：</div><br>&nbsp;<br><div align="left">①关注启发式教育，用互动式教育启发孩子对学习的兴趣和效率。AlphaGo愿意跟人类学习，我们当然也要善用最善于分析，最博学的机器。善于学习，乐于学习的孩子，是不会醉生梦死的。</div><br>&nbsp;<br><div align="left">②正视发育右脑的学科领域，平衡文理。塞翁失马，焉知非福？机器超越人类的左脑（工程逻辑思维），也许就是要人类从过去几十年重视理工，倾斜回来，花更多的精力在机器不擅长的右脑，例如：文学诗歌、艺术音乐、电影话剧、文创设计、工匠之美、宗教哲学、沟通情商。这不是说就不要学理工了，而是说应该让适合理工，爱好理工的人学理工，适合人文，爱好人文的人学人文。我们应该平等看待文理，并且鼓励发展文理双全的人才。</div><br>&nbsp;<br><div align="left">③鼓励有上进心的年轻人挑战自己， 孜孜以求，成为专才。不要把时间浪费在“安稳”但是重复性的工作上，而要以“成为某个特殊又有用领域的最顶尖人才”为目标，为己任。</div>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;left&quot;&gt;昨天AlphaGo第一盘棋战胜了李世石，激起了各种“机器超越人类，科幻小说将成真”的讨论。特别有趣的是有人揣测AlphaGo下面会不会故意输下几盘棋，以免人类起疑心，阻挡了它统治人类的野心。其实，虽然机器在逻辑分析推算方面，能力会远超人类，但是依然是属于人类操控的工具。AlphaGo这类的“人工智能”机器真正可能带来的危机，不是奴役人类，而是让人类丧失斗志，无所事事。&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Reprinted" scheme="http://timeorigin.cn/categories/Reprinted/"/>
    
    
      <category term="AI" scheme="http://timeorigin.cn/tags/AI/"/>
    
      <category term="Kai-Fu Lee" scheme="http://timeorigin.cn/tags/Kai-Fu-Lee/"/>
    
  </entry>
  
  <entry>
    <title>短篇｜王充闾：谈写流年</title>
    <link href="http://timeorigin.cn/Thelife/"/>
    <id>http://timeorigin.cn/Thelife/</id>
    <published>2016-02-04T12:21:27.000Z</published>
    <updated>2017-03-16T16:14:45.248Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ooo.0o0.ooo/2016/02/04/56b3427290eaf.jpeg" alt=""></p>
<p><strong>作者｜王充闾</strong></p>
<p>伴随着人生阅历的增加，人们心目中的宇宙会不断地向外扩张开去，而就个体生命来说，人生的风景却在这种扩张中相对地敛缩，曾经喧嚣灵海的汐潮，在时序的迁流中，已如浅水浮花，波澜不兴了。谈写流年，就是要恬淡而缓和地解读生命，通过文字来重现一个鲜活的生命真实，描绘一种生灭流转的人生风景。<br><a id="more"></a></p>
<p>时间在销蚀生命的同时，自然也接受了记忆力的对抗——往事总要竭力挣脱流光的裹挟，让自己沉淀下来，留存些许痕迹，使已逝的云烟在现实的屏幕上重现婆娑的光影。而所谓解读生命真实，描绘人生风景，也就是要捕捉这些光影，设法将淹没于岁月烟尘中的般般情事勾勒下来。</p>
<p>回忆是中老年人的一种特有的专利。它是对于遥远的童心的痴情呼唤，是重新感受年轻，追忆逝水年华的一种心灵履约，是对于昔日芳华的斜陽系缆。普通的人们毕竟还都天机太浅，既不具备佛家的顿悟，也没有道家坐忘的功夫，总是像《世说新语》中说的“未免有情”，因此，在展现飞逝的生命的过程中，在感受几丝甜美，几许温馨的同时，难免会带上一些淡淡的留连，悠悠的怅惋；而且，由于想像中的完美和过于热切的期待终究代替不了实际上的近乎无情的变迁，所以，回忆常常带有感伤的味道。早在一千一百多年前，玉溪生就在《锦瑟》诗中慨乎言之：“此情可待成追忆，只是当时已惘然。”当时既已惘然，更不要说事后追忆了。</p>
<p>许多生命的图像，在心灵的长期浸染下，已经成为一种前尘梦影，旧时月色，一似飘逝的过眼云烟，或则了无踪影，或则漫漶模糊。由于追忆属于想像的领域，它是在时空变换条件下的一种新的综合，新的加工，因此，凡是追忆都会或多或少、或显或隐地夹杂着本人对于过往情事的重新诠释，包括赋予它以当时未必具备的新的意蕴，新的感受。也正因为这样，所以，无论回忆也好，捕捉光影，勾勒情怀也好，充其量只能是粗具形体的原始素描，而绝非摄影机下原原本本的照相，更不可能是那种记录三维空间整体信息的全息影片。</p>
<p>当然，就算是原原本本的摄像或者全息影片又怎么样，年光已如飞鸟般地飘逝了，留下来的只是一个个空巢，挂在那里任由后人去指认、评说。有人说得更为形象：照片这东西不过是生命的碎壳，纷纷的岁月已经过去，瓜子仁一粒粒咽了下去，滋味各人自己知道，留给大家看的唯有那满地狼藉的黑白瓜子壳。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ooo.0o0.ooo/2016/02/04/56b3427290eaf.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者｜王充闾&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;伴随着人生阅历的增加，人们心目中的宇宙会不断地向外扩张开去，而就个体生命来说，人生的风景却在这种扩张中相对地敛缩，曾经喧嚣灵海的汐潮，在时序的迁流中，已如浅水浮花，波澜不兴了。谈写流年，就是要恬淡而缓和地解读生命，通过文字来重现一个鲜活的生命真实，描绘一种生灭流转的人生风景。&lt;br&gt;
    
    </summary>
    
      <category term="Reprinted" scheme="http://timeorigin.cn/categories/Reprinted/"/>
    
    
      <category term="life" scheme="http://timeorigin.cn/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>v6SS tutorial</title>
    <link href="http://timeorigin.cn/v6ss_tutorials/"/>
    <id>http://timeorigin.cn/v6ss_tutorials/</id>
    <published>2015-11-10T07:23:19.000Z</published>
    <updated>2018-03-27T15:44:52.842Z</updated>
    
    <content type="html"><![CDATA[<p><strong>网站地址：<a href="http://eduvpn.xyz" target="_blank" rel="external">http://eduvpn.xyz</a></strong></p>
<h1 id="Windows平台安装使用教程"><a href="#Windows平台安装使用教程" class="headerlink" title="Windows平台安装使用教程"></a>Windows平台安装使用教程</h1><p><strong>配置客户端软件：</strong><br><a id="more"></a></p>
<ul>
<li>下载Windows平台的客户端：<strong><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">Windows客户端</a></strong></li>
<li>启动客户端</li>
<li>选择<strong>启用系统代理</strong>，系统代理模式为“<strong>全局模式</strong>”</li>
</ul>
<p><img src="https://ooo.0o0.ooo/2016/04/25/571e342fdd0cc.png" alt=""></p>
<h2 id="点击右边栏的节点列表-选择IPv6二维码"><a href="#点击右边栏的节点列表-选择IPv6二维码" class="headerlink" title="点击右边栏的节点列表,选择IPv6二维码"></a><strong>点击右边栏的节点列表,选择<strong>IPv6二维码</strong></strong></h2><p><img src="https://ooo.0o0.ooo/2016/04/25/571e373d94b38.png" alt=""></p>
<h2 id="打开客户端，选择扫描屏幕上的二维码"><a href="#打开客户端，选择扫描屏幕上的二维码" class="headerlink" title="打开客户端，选择扫描屏幕上的二维码"></a>打开客户端，选择<strong>扫描屏幕上的二维码</strong></h2><p><img src="https://ooo.0o0.ooo/2016/04/25/571e39183595f.png" alt=""></p>
<h2 id="打开浏览器即可免流量上网"><a href="#打开浏览器即可免流量上网" class="headerlink" title="打开浏览器即可免流量上网"></a>打开浏览器即可免流量上网</h2><p><em>断开时<strong>关闭系统代理</strong>即可</em></p>
<p><img src="https://ooo.0o0.ooo/2015/12/01/565e738b9ca4e.png" alt=""></p>
<h2 id="More：浏览器切换配置（Chrome）"><a href="#More：浏览器切换配置（Chrome）" class="headerlink" title="More：浏览器切换配置（Chrome）"></a>More：浏览器切换配置（Chrome）</h2><!--more-->
<ul>
<li>下载安装<a href="https://www.google.cn/chrome/index.html" target="_blank" rel="external">Chrome浏览器</a>，推荐安装64位 。</li>
<li>下载切换插件：<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="external">SwitchyOmega.crx</a></li>
<li><p>打开Chrome的开发者模式：<br><img src="https://ooo.0o0.ooo/2016/04/25/571e3cec95eb4.png" alt=""></p>
</li>
<li><p>将下载的SwitchyOmega.crx添加进去<br><img src="https://ooo.0o0.ooo/2016/04/25/571e3e0b3ea3a.png" alt=""></p>
</li>
<li><p>添加扩展文件<br><img src="https://ooo.0o0.ooo/2016/04/25/571e3e0b2b266.png" alt=""></p>
</li>
<li><p>根据内置教程，添加不同的代理规则。</p>
</li>
<li><p>需要使用代理时，点击浏览器右上角的圆圈，切换到代理模式，不需要时选择直接连接模式。<strong>注意 </strong><span style="color: #ff0000;">如果想使用切换规则，请不要选择客户端的系统代理。</span></p>
</li>
</ul>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;网站地址：&lt;a href=&quot;http://eduvpn.xyz&quot;&gt;http://eduvpn.xyz&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;Windows平台安装使用教程&quot;&gt;&lt;a href=&quot;#Windows平台安装使用教程&quot; class=&quot;headerlink&quot; title=&quot;Windows平台安装使用教程&quot;&gt;&lt;/a&gt;Windows平台安装使用教程&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;配置客户端软件：&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://timeorigin.cn/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>关于申请Github Education Pack</title>
    <link href="http://timeorigin.cn/github-education-pack/"/>
    <id>http://timeorigin.cn/github-education-pack/</id>
    <published>2015-10-16T09:17:18.000Z</published>
    <updated>2018-03-27T16:02:22.763Z</updated>
    
    <content type="html"><![CDATA[<p>&emsp;&emsp;Github的education pack真的是一个良心惠民政策啊，免费提供给学生的大福利（具体请查看<a href="https://education.github.com/pack" target="_blank" rel="external">这里</a>的介绍）。<br>&emsp;&emsp;如果全部使用的话，初步估算，就算按照你明年毕业，相当于近百万美元 ($143 万 +)。当然，作为学生也没有精力和必要去使用这么多软件包，但至少有几个很值得使用（比如<strong>DigitalOcean代金券</strong>、<strong>.me域名</strong>、<strong>SSL证书</strong>等），真是超级给力。<br>&emsp;&emsp;可是由于国内的很多无良人士，明明不是学生却绞尽脑汁伪造学生身份骗取education优惠。导致现在的申请大环境非常恶劣，真正的学生却很难申请到优惠。不幸的是我知道这个优惠的时候大环境已经是这样了，用学校edu邮箱申请直接给秒拒了。所以我只好上传了一张学生证的照片，我在申请原因里写了大概有四五百字，把我的情况仔细阐述了一遍，说了中国学生没有信用卡怎么怎么不方便，这个优惠会对我有什么什么样的帮助，过了将近两个星期给我发邮件说<strong><em>“Unfortunately, we weren’t able to approve your educational discount request.”</em></strong>就是拒了。无奈只能再次申请，仔细想了下上次申请失败的原因，我认为可能是Github那边对于中文学生证的认可不太高，其次就是只能上传一张图片，无法全方位的展示学生身份信息，于是我就直接发邮件给github education，上传了4张学生证照片，涵盖了学生证每页的信息。然后再在网页端再次申请，这次我上传了邮件中的其中一张照片（学生信息的那一页），说明下我没有英文学生证还有我真的很需要这份discount等等。13号发的邮件，今天中午回到寝室Gmail推送了一封邮件，<strong>Powerup get!</strong>给过了。<br>&emsp;&emsp;在这里给大家的经验就是一定要诚信，不要因为自己的行为使整个中国开发者群体的形象受损。还有就是给github赞一个，看来他们是认真看了每个申请请求的，那些迟迟不过的，多半是你的申请写的太简单了吧。</p>
<p><strong>2017.09更新：</strong> 最新情况是Pack内容变少了，国内高校邮箱可以验证通过了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Github的education pack真的是一个良心惠民政策啊，免费提供给学生的大福利（具体请查看&lt;a href=&quot;https://education.github.com/pack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;
    
    </summary>
    
      <category term="Personal" scheme="http://timeorigin.cn/categories/Personal/"/>
    
    
  </entry>
  
  <entry>
    <title>一份简要的IPv6入门姿势</title>
    <link href="http://timeorigin.cn/ipv6/"/>
    <id>http://timeorigin.cn/ipv6/</id>
    <published>2015-09-23T03:23:25.000Z</published>
    <updated>2018-05-02T09:47:23.495Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h1><p>  IPv6是“Internet Protocol Version 6”的缩写，是由国际互联网标准化组织IETF设计的用于替代现行版本IPv4的下一代互联网核心协议，对过渡、路由、网管、传输、安全等已有比较成熟的标准。<br><a href="https://www.wikiwand.com/en/IPv6" target="_blank" rel="external">IPv6 wiki</a><br><a href="https://www.wikiwand.com/en/China_Next_Generation_Internet" target="_blank" rel="external">China_Next_Generation_Internet</a></p>
<a id="more"></a>
<h2 id="IPv6发展"><a href="#IPv6发展" class="headerlink" title="IPv6发展"></a>IPv6发展</h2><p>  目前，中国教育网ISP下IPv6部署率和使用率都比较高，中科院系统内的科技网也有部署IPv6。<br>本文主要针对这两个ISP下的IPv6.</p>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>  在接入IPv6网络环境中，一般都可通过DHCPv6自动获取到IPv6地址。所有主流操作系统均支持，但大多数家用路由器不支持。所以如果你要使用IPv6请不要通过普通路由器再和上层网络连接。（直连或者使用支持IPv6的路由器均可）</p>
<p>  如何确定接入IPv6网络呢? 本文列出一些方式供检测：</p>
<ul>
<li><a href="http://ip6.me" target="_blank" rel="external">ip6.me</a></li>
<li><a href="http://ipv6.icanhazip.com/" target="_blank" rel="external">ipv6.icanhazip.com</a></li>
<li><a href="https://test-ipv6.com/" target="_blank" rel="external">IPv6 连接测试</a></li>
</ul>
<h2 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h2><p>  一些小技巧，更好的使用IPv6网络。</p>
<h3 id="使用IPv6-DNS"><a href="#使用IPv6-DNS" class="headerlink" title="使用IPv6 DNS"></a>使用IPv6 DNS</h3><p>  这里推荐大家一个国内无污染IPv6 DNS.</p>
<blockquote>
<p><strong>2001:da8::666</strong></p>
</blockquote>
<p>  DNS666，由tuna和lug联合提供。感谢~</p>
<h3 id="使用IPv6-Hosts"><a href="#使用IPv6-Hosts" class="headerlink" title="使用IPv6 Hosts"></a>使用IPv6 Hosts</h3><p>  更改dns可能会有某些网站访问缓慢或不能访问的情况，所以使用本地hosts也是一个不错的选择。<br>  这里给出一个链接，Windows下自动更换Hosts脚本（支持IPv6 hosts）<br>  <a href="https://github.com/Junyangz/WinHosts" target="_blank" rel="external">https://github.com/Junyangz/WinHosts</a><br>  可以git clone也可以直接下载下来，如果没有git环境可以直接下载zip包。<br>  <a href="https://github.com/Junyangz/WinHosts/archive/master.zip" target="_blank" rel="external">https://github.com/Junyangz/WinHosts/archive/master.zip</a><br>  具体使用方法见README.md</p>
<h3 id="一些网站"><a href="#一些网站" class="headerlink" title="一些网站"></a>一些网站</h3><p><a href="https://ipv6.google.com" target="_blank" rel="external">Google IPv6</a><br><a href="https://www.youtube.com" target="_blank" rel="external">Youtube</a></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文原先介绍的是教育网下如何访问Youtube等，现于17年末更新。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;IPv6&quot;&gt;&lt;a href=&quot;#IPv6&quot; class=&quot;headerlink&quot; title=&quot;IPv6&quot;&gt;&lt;/a&gt;IPv6&lt;/h1&gt;&lt;p&gt;  IPv6是“Internet Protocol Version 6”的缩写，是由国际互联网标准化组织IETF设计的用于替代现行版本IPv4的下一代互联网核心协议，对过渡、路由、网管、传输、安全等已有比较成熟的标准。&lt;br&gt;&lt;a href=&quot;https://www.wikiwand.com/en/IPv6&quot;&gt;IPv6 wiki&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.wikiwand.com/en/China_Next_Generation_Internet&quot;&gt;China_Next_Generation_Internet&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://timeorigin.cn/categories/Tutorial/"/>
    
    
      <category term="IPv6" scheme="http://timeorigin.cn/tags/IPv6/"/>
    
      <category term="Youtube" scheme="http://timeorigin.cn/tags/Youtube/"/>
    
      <category term="Google" scheme="http://timeorigin.cn/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>教育网利用DigitalOcean搭建IPv6—Shadowscoks实现免流量&amp;科学上网</title>
    <link href="http://timeorigin.cn/digitalocean/"/>
    <id>http://timeorigin.cn/digitalocean/</id>
    <published>2015-09-17T13:58:10.000Z</published>
    <updated>2018-03-27T16:22:57.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建ipv6的SS背景"><a href="#搭建ipv6的SS背景" class="headerlink" title="搭建ipv6的SS背景"></a>搭建ipv6的SS背景</h2><p>自从在VPS搭建了ipv6-Shadowscoks以后就一直觉得有这样一个免流量无墙的通道不好好玩一玩貌似可惜了。 于是本人折腾了半天的时间，租用了DigitalOcean一个VPS搭建了一个支持ipv6的VPN，不仅可以免流量还自带科学上网。支持ipv6免流量的高校应该都是可以的。</p>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>效果自然是非常的感人</p>
<ul>
<li>全局免流量，虽然走的是美国服务器，墙内的网站访问同样正常。</li>
<li>科学上网，打开youtube的速度很快，1080P的视频无压力。</li>
<li>可以分享，可以将你的服务分享出去，由于带宽非常高，基本不会互相影响。</li>
<li>迅雷代理，室友得到分享以后挂上了迅雷……速度可以达到20MBps</li>
<li>费用较低，5$一月价格对比起来已经很低，如果能获得github教育认证的话会有50$的赠送。相当于免费使用10个月。</li>
</ul>
<p><strong> 下面我就将这个过程总结一下，手把手教你搭建自己的VPN。</strong></p>
<a id="more"></a>
<ol>
<li>注册和激活DigitalOcean账号</li>
<li>购买主机</li>
<li>配置主机服务端</li>
<li>使用ShadowSocks客户端完成连接</li>
<li>其它相关内容</li>
</ol>
<ul>
<li><strong>Digital Ocean注册</strong></li>
</ul>
<p>首先注册账号，访问DigitalOcean并进行注册，（<a href="https://www.digitalocean.com/?refcode=4bd0152b0aa6" target="_blank" rel="external">点击这里注册</a>）这里我给出的是我的推广链接，通过这个链接你可以获得10$的资金，虽然我并不能直接获得奖励。完成注册以后可能需要激活你的账号，根据提示填写相关信息。然后就是绑定信用卡或者使用<a href="https://www.paypal.com/signup/account" target="_blank" rel="external">PayPal</a>进行一次充值。我没有信用卡并且paypal可以使用银联卡付款，因此我进行了一次付款5$。至此你已经完成了账号的注册和激活。此时账号上应该有15$的余额，够使用3个月。按我当时的汇率总共是¥31.87。<br>新增日本便宜VPS（Vultr）最低配置2.5刀每月，<a href="http://www.vultr.com/?ref=6912327" target="_blank" rel="external">点击这里注册</a>。</p>
<p><strong>购买主机</strong><br>    下面就是进行购买和配置VPS 在DigitalOcean中选择Droplets</p>
<ul>
<li>主机名字可以任意</li>
<li>费用选择最便宜的5刀每月即可</li>
<li>主机我选择的San Francisco速度挺不错，也可以选择其它地址。（DO主机按小时计费随便试，不得不说很良心）</li>
<li><strong>记得勾选IPV6</strong></li>
<li><strong>注意勾选Backups是要单独收费的，选不选请根据个人情况决定</strong></li>
<li>如果你希望搭建Blog（wordpress）等站点，请务必勾选User Data，内容可以按照<span style="color: #0000ff;"><a href="https://github.com/digitalocean/do_user_scripts/blob/master/CentOS-7/web-servers/lamp.yml" target="_blank" rel="external">这里</a></span>填写（LAMP安装很麻烦的）</li>
<li>操作系统选择CentOS 7 x64</li>
<li><strong>添加SSH Key（在创建主机之前）以提高访问的安全性，具体方法参见<a href="https://www.zxc.so/do-ssh-key.html" target="_blank" rel="external">这里</a>.（注：强列建议添加SSH，以后用Putty管理VPS很方便）</strong></li>
</ul>
<p>完成配置以后点击Create，等待大约一分钟，你就可以管理主机了</p>
<p>记下主机的ipv6地址，用putty登录，主机填ipv6的地址也是可以的，而且速度更快相比于ipv4。</p>
<ul>
<li><strong>配置主机服务端</strong></li>
</ul>
<p>下面的过程就是最有技术含量的东西，技术细节可以<a href="http://blog.kyangcis.me/2015/01/01/my-first-vps/" target="_blank" rel="external">参考这里</a>，不过在这里我只介绍最简单的方式。</p>
<p>连接你的主机</p>
<p>1.一种最直接的方法就是在<a href="https://cloud.digitalocean.com/droplets/" target="_blank" rel="external">这里</a>选择你的Droplet然后Access=》[console access] <strong>（不推荐）</strong><br>2.另外一种方法就是参照上面提到的添加SSH key方法一文使用客户端连接<strong>（强烈推荐）</strong><br>我用的是putty登陆，所以以下就以 此为例</p>
<ul>
<li><strong>部署环境</strong></li>
</ul>
<p>鉴于你们比较懒，请直接把下面的magical phrase复制粘贴回车</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</div><div class="line">chmod +x shadowsocks.sh</div><div class="line">./shadowsocks.sh 2&amp;gt;&amp;amp;1 | tee shadowsocks.log&lt;/pre&gt;</div></pre></td></tr></table></figure>
<p>请坐好不要乱动……直到提示修改密码，修改一下。 然后会提示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Congratulations, shadowsocks install completed!</div><div class="line">Your Server IP:your_server_ip</div><div class="line">Your Server Port:8989</div><div class="line">Your Password:your_password</div><div class="line">Your Local IP:127.0.0.1</div><div class="line">Your Local Port:1080</div><div class="line">Your Encryption Method:aes-256-cfb</div><div class="line"></div><div class="line">Welcome to visit:http://teddysun.com/342.html</div><div class="line">Enjoy it!</div></pre></td></tr></table></figure>
<ul>
<li>以上使用的是<a href="https://teddysun.com/342.html" target="_blank" rel="external">秋水逸冰</a>大神的一键安装脚本，不过我们还需要修改配置以适合我们的ipv6环境。 输入</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/shadowsocks.json</div></pre></td></tr></table></figure>
<ul>
<li>按i进入编辑模式 将文件内容编辑成如下（此部分可以用Winscp直接修改）</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"server"</span>:<span class="string">"::"</span>,</div><div class="line">  <span class="string">"server_port"</span>:8989,</div><div class="line">  <span class="string">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</div><div class="line">  <span class="string">"local_port"</span>:1080,</div><div class="line">  <span class="string">"password"</span>:<span class="string">"yourpassword"</span>,</div><div class="line">  <span class="string">"timeout"</span>:300,</div><div class="line">  <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</div><div class="line">  <span class="string">"fast_open"</span>: <span class="literal">false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>注意上面把yourpassword改为你的密码</li>
<li>ctrl+c退出编辑模式</li>
<li>输入 “:x” （英文冒号+x）保存并退出</li>
<li>输以下命令重启SS让配置生效</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/shadowsocks restart</div></pre></td></tr></table></figure>
<p>至此环境已经完全配好，赶快连接去上网吧~！</p>
<ul>
<li><strong>使用ShadowSocks客户端完成连接</strong></li>
</ul>
<p>下载ShadowSocks客户端</p>
<p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">Shadowsocks-win</a></p>
<p>注意ip地址一定要像这样 [2604:a880:12:200::13e:8000]（不用加/64） 用左右方括号框起来。</p>
<p><strong> OK!至此你已经完成所有的工作，快使用 127.0.0.1:1080 Socks5代理端口来试一试吧。</strong></p>
<h2 id="其它相关内容"><a href="#其它相关内容" class="headerlink" title="其它相关内容"></a><strong>其它相关内容</strong></h2><ul>
<li>浏览器相关设置请参照<a href="https://ttt.tt/150/" target="_blank" rel="external">这里</a></li>
<li>设置迅雷代理百度云代理均可速度很棒</li>
<li><a href="https://education.github.com/" target="_blank" rel="external">GitHub Edu</a>认证以后可以获得Digital Ocean 100$礼品码，不过目前只有50$了，而且要新用户才能用。</li>
<li><a href="http://eduvpn.xyz" target="_blank" rel="external">本站ss分享站（IPv6 Only)</a></li>
</ul>
<p>如有问题请留言评论!</p>
<p>&nbsp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;搭建ipv6的SS背景&quot;&gt;&lt;a href=&quot;#搭建ipv6的SS背景&quot; class=&quot;headerlink&quot; title=&quot;搭建ipv6的SS背景&quot;&gt;&lt;/a&gt;搭建ipv6的SS背景&lt;/h2&gt;&lt;p&gt;自从在VPS搭建了ipv6-Shadowscoks以后就一直觉得有这样一个免流量无墙的通道不好好玩一玩貌似可惜了。 于是本人折腾了半天的时间，租用了DigitalOcean一个VPS搭建了一个支持ipv6的VPN，不仅可以免流量还自带科学上网。支持ipv6免流量的高校应该都是可以的。&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;效果&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;效果自然是非常的感人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局免流量，虽然走的是美国服务器，墙内的网站访问同样正常。&lt;/li&gt;
&lt;li&gt;科学上网，打开youtube的速度很快，1080P的视频无压力。&lt;/li&gt;
&lt;li&gt;可以分享，可以将你的服务分享出去，由于带宽非常高，基本不会互相影响。&lt;/li&gt;
&lt;li&gt;迅雷代理，室友得到分享以后挂上了迅雷……速度可以达到20MBps&lt;/li&gt;
&lt;li&gt;费用较低，5$一月价格对比起来已经很低，如果能获得github教育认证的话会有50$的赠送。相当于免费使用10个月。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; 下面我就将这个过程总结一下，手把手教你搭建自己的VPN。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://timeorigin.cn/categories/Tutorial/"/>
    
    
      <category term="digitalocean" scheme="http://timeorigin.cn/tags/digitalocean/"/>
    
      <category term="shadowsocks" scheme="http://timeorigin.cn/tags/shadowsocks/"/>
    
      <category term="vps" scheme="http://timeorigin.cn/tags/vps/"/>
    
  </entry>
  
</feed>
